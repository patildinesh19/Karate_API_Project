23:30:12.949 [main] INFO  io.gatling.compiler.ZincCompiler$ - compiling 1 Scala source to D:\Karate Framework\karateframework\target\test-classes ...
23:30:15.159 [main] INFO  io.gatling.compiler.ZincCompiler$ - done compiling
23:30:16.702 [main] INFO  i.g.c.config.GatlingConfiguration$ - Gatling will try to load 'gatling.conf' config file as ClassLoader resource.
23:30:17.077 [GatlingSystem-akka.actor.default-dispatcher-5] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
23:30:17.737 [GatlingSystem-akka.actor.default-dispatcher-5] INFO  i.g.c.stats.writer.ConsoleDataWriter - Initializing
23:30:17.738 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  i.g.c.stats.writer.LogFileDataWriter - Initializing
23:30:17.745 [GatlingSystem-akka.actor.default-dispatcher-5] INFO  i.g.c.stats.writer.ConsoleDataWriter - Initialized
23:30:17.749 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  i.g.c.stats.writer.LogFileDataWriter - Initialized
23:30:17.785 [gatling-1-1] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:30:17.785 [gatling-1-2] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:30:18.946 [gatling-1-1] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:30:18.953 [gatling-1-2] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:30:19.868 [GatlingSystem-akka.actor.default-dispatcher-6] INFO  com.intuit.karate - karate.env system property was: QA 
23:30:19.868 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - karate.env system property was: QA 
23:30:19.873 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - karate.env run with new user : N 
23:30:19.873 [GatlingSystem-akka.actor.default-dispatcher-6] INFO  com.intuit.karate - karate.env run with new user : N 
23:30:19.895 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
23:30:20.039 [GatlingSystem-akka.actor.default-dispatcher-8] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

23:30:21.052 [GatlingSystem-akka.actor.default-dispatcher-8] DEBUG com.intuit.karate - response time in milliseconds: 1012
1 < 200
1 < Date: Fri, 04 Nov 2022 18:00:20 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 764f3fa82bd572c0-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"}}

23:30:21.054 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
  }
}
 
23:30:21.058 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
23:30:21.060 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:21.063 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
23:30:21.063 [GatlingSystem-akka.actor.default-dispatcher-6] WARN  com.intuit.karate - this thread waited 1168 milliseconds for callSingle lock: classpath:Datadriven/login.feature
23:30:21.064 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 04 Nov 2022 18:00:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "764f3fa82bd572c0-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123qyv72th2fdm@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8",
  "username": "dinesh11"
}
 
23:30:21.064 [GatlingSystem-akka.actor.default-dispatcher-6] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 04 Nov 2022 18:00:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "764f3fa82bd572c0-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123qyv72th2fdm@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8",
  "username": "dinesh11"
}
 
23:30:21.253 [GatlingSystem-akka.actor.default-dispatcher-6] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:21.253 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:21.258 [GatlingSystem-akka.actor.default-dispatcher-8] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 131
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Test_102","description":"Test_102","body":"When you play a game of thrones you win or you die."}}

23:30:21.258 [GatlingSystem-akka.actor.default-dispatcher-6] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 154
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Test_101","description":"Test_101","body":"Things are not always as they seemed, much that may seem evil can be good."}}

23:30:21.768 [gatling-1-3] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:30:21.770 [gatling-1-3] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:30:21.794 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  com.intuit.karate - karate.env system property was: QA 
23:30:21.794 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  com.intuit.karate - karate.env run with new user : N 
23:30:21.796 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 04 Nov 2022 18:00:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "764f3fa82bd572c0-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123qyv72th2fdm@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8",
  "username": "dinesh11"
}
 
23:30:21.826 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:21.830 [GatlingSystem-akka.actor.default-dispatcher-7] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 128
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Test_103","description":"Test_103","body":"There are no heroes...in life, the monsters win."}}

23:30:22.254 [gatling-1-4] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:30:22.255 [gatling-1-4] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:30:22.273 [GatlingSystem-akka.actor.default-dispatcher-10] INFO  com.intuit.karate - karate.env system property was: QA 
23:30:22.274 [GatlingSystem-akka.actor.default-dispatcher-10] INFO  com.intuit.karate - karate.env run with new user : N 
23:30:22.276 [GatlingSystem-akka.actor.default-dispatcher-10] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 04 Nov 2022 18:00:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "764f3fa82bd572c0-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123qyv72th2fdm@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8",
  "username": "dinesh11"
}
 
23:30:22.299 [GatlingSystem-akka.actor.default-dispatcher-10] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:22.303 [GatlingSystem-akka.actor.default-dispatcher-10] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 194
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Test_104","description":"Test_104","body":"Never forget who you are. The rest of the world won't. Wear it like an armor and it can never be used against you."}}

23:30:22.456 [GatlingSystem-akka.actor.default-dispatcher-6] DEBUG com.intuit.karate - response time in milliseconds: 1198
1 < 200
1 < Date: Fri, 04 Nov 2022 18:00:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"19f-psRGhZwJIfyWzPM/hczUGuMM9IM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=cW%2BXoRWb6g44UhuiI3BqTTIfhdscZAEtTIwd%2BGSRbzT1OtyOjHw5e%2FoTq%2BGbGosuFoyD8sqhO19UjM5Yx72fq2WQ4intgH7VYTG4bqhRxM%2FDCFzX6kyMNaiM043Ms9F2XYeY"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 764f3fb2197d7719-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Test_101-99869","title":"Test_101","description":"Test_101","body":"Things are not always as they seemed, much that may seem evil can be good.","tagList":[],"createdAt":"2022-11-04T18:00:22.239Z","updatedAt":"2022-11-04T18:00:22.239Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

23:30:22.473 [GatlingSystem-akka.actor.default-dispatcher-6] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Test_101-99869",
    "title": "Test_101",
    "description": "Test_101",
    "body": "Things are not always as they seemed, much that may seem evil can be good.",
    "tagList": [
    ],
    "createdAt": "2022-11-04T18:00:22.239Z",
    "updatedAt": "2022-11-04T18:00:22.239Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
23:30:22.475 [GatlingSystem-akka.actor.default-dispatcher-6] INFO  com.intuit.karate - [print] Title :: Test_101-99869 
23:30:22.479 [GatlingSystem-akka.actor.default-dispatcher-7] DEBUG com.intuit.karate - response time in milliseconds: 649
1 < 200
1 < Date: Fri, 04 Nov 2022 18:00:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"185-PQ6Tdp149800pXxPihE78Cld+KI"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=p64Oh44NuzZM2HZ9RW%2FNIhPUjSWcTSJkWOE46tj5PcSmCrO8oU92AV%2B2XMduTitLDBnRDQm1vwPhrsCbmbpitooFsMtPFzfSXkL6ldnFTOZT6C2bsxTN8GJCmEEqBM1iWNeY"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 764f3fb23ccf8861-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Test_103-99869","title":"Test_103","description":"Test_103","body":"There are no heroes...in life, the monsters win.","tagList":[],"createdAt":"2022-11-04T18:00:22.272Z","updatedAt":"2022-11-04T18:00:22.272Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

23:30:22.484 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Test_103-99869",
    "title": "Test_103",
    "description": "Test_103",
    "body": "There are no heroes...in life, the monsters win.",
    "tagList": [
    ],
    "createdAt": "2022-11-04T18:00:22.272Z",
    "updatedAt": "2022-11-04T18:00:22.272Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
23:30:22.485 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  com.intuit.karate - [print] Title :: Test_103-99869 
23:30:22.755 [GatlingSystem-akka.actor.default-dispatcher-5] INFO  i.g.core.controller.inject.Injector - Scenario create and delete Article has finished injecting
23:30:22.755 [GatlingSystem-akka.actor.default-dispatcher-5] INFO  i.g.core.controller.inject.Injector - Injecting is done
23:30:22.770 [gatling-1-5] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:30:22.771 [gatling-1-5] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:30:22.795 [GatlingSystem-akka.actor.default-dispatcher-11] INFO  com.intuit.karate - karate.env system property was: QA 
23:30:22.796 [GatlingSystem-akka.actor.default-dispatcher-11] INFO  com.intuit.karate - karate.env run with new user : N 
23:30:22.801 [GatlingSystem-akka.actor.default-dispatcher-11] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 04 Nov 2022 18:00:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "764f3fa82bd572c0-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123qyv72th2fdm@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8",
  "username": "dinesh11"
}
 
23:30:22.830 [GatlingSystem-akka.actor.default-dispatcher-8] DEBUG com.intuit.karate - response time in milliseconds: 1572
2 < 200
2 < Date: Fri, 04 Nov 2022 18:00:22 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"188-+zmTQG0kKdb9ba8545MYqHYciiY"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=czafdA1bt0buYRpXyqmuPf95Ot5pvOTwBejMuOmKANnIpc7Qx3vJycsaWxodWkgSfWq6RSuExWeuIRzGHSRFCx%2BmvQG9ET5JbBeL0511PXj1V7vnwnxQxMYyLcdmyGIJjPE2"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 764f3fb45959776d-LHR
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Test_102-99869","title":"Test_102","description":"Test_102","body":"When you play a game of thrones you win or you die.","tagList":[],"createdAt":"2022-11-04T18:00:22.598Z","updatedAt":"2022-11-04T18:00:22.598Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

23:30:22.833 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Test_102-99869",
    "title": "Test_102",
    "description": "Test_102",
    "body": "When you play a game of thrones you win or you die.",
    "tagList": [
    ],
    "createdAt": "2022-11-04T18:00:22.598Z",
    "updatedAt": "2022-11-04T18:00:22.598Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
23:30:22.834 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  com.intuit.karate - [print] Title :: Test_102-99869 
23:30:22.836 [GatlingSystem-akka.actor.default-dispatcher-11] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:22.838 [GatlingSystem-akka.actor.default-dispatcher-11] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 97
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Test_106","description":"Test_106","body":"Winter is coming."}}

23:30:23.171 [GatlingSystem-akka.actor.default-dispatcher-10] DEBUG com.intuit.karate - response time in milliseconds: 868
1 < 200
1 < Date: Fri, 04 Nov 2022 18:00:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c7-+ZQduIytb75lS1NSdy6foTC4zWY"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=HucH6PFym0mTignfI4dcvmWj3lgqv2eoBjlJI9NtSJQ1cR5PdIf8tcjdwRGss9B%2FLAQdnNjR8gM7fjhPKSSEtWxvar2TtucATTmJoU7woWKVSbG%2B0pTaTtKMKVaJuKRttqGv"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 764f3fb63f258e0c-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Test_104-99869","title":"Test_104","description":"Test_104","body":"Never forget who you are. The rest of the world won't. Wear it like an armor and it can never be used against you.","tagList":[],"createdAt":"2022-11-04T18:00:22.903Z","updatedAt":"2022-11-04T18:00:22.903Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

23:30:23.174 [GatlingSystem-akka.actor.default-dispatcher-10] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Test_104-99869",
    "title": "Test_104",
    "description": "Test_104",
    "body": "Never forget who you are. The rest of the world won't. Wear it like an armor and it can never be used against you.",
    "tagList": [
    ],
    "createdAt": "2022-11-04T18:00:22.903Z",
    "updatedAt": "2022-11-04T18:00:22.903Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
23:30:23.175 [GatlingSystem-akka.actor.default-dispatcher-10] INFO  com.intuit.karate - [print] Title :: Test_104-99869 
23:30:23.263 [gatling-1-6] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:30:23.264 [gatling-1-6] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:30:23.278 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  com.intuit.karate - karate.env system property was: QA 
23:30:23.279 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  com.intuit.karate - karate.env run with new user : N 
23:30:23.280 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 04 Nov 2022 18:00:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-2gukK5V3wUD1u8wyEqCRqlzN+gE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ysas0rMcI0h7yTkgvOy8epe3zUHeu3tSmwZZWPwSdh8bsxnx5MRr%2FaKawpTIsISxX6Qkr0SiY4%2FeAOmCgYJ4jvfXt1CKtaddEInSb6dFvUAhGyTUeHj7VavK3OKCTWgAQfsM\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "764f3fa82bd572c0-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123qyv72th2fdm@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8",
  "username": "dinesh11"
}
 
23:30:23.306 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8 
23:30:23.309 [GatlingSystem-akka.actor.default-dispatcher-12] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY3NTg0ODIwLCJleHAiOjE2NzI3Njg4MjB9.I4Jcy2L3fSuco6NjEM9Ke7AiEz25IVCsSzAjzu8Ovz8
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 265
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Test_107","description":"Test_107","body":"And so he spoke, and so he spoke, that Lord of Castamere, but now the rains weep o'er his hall, with no one there to hear. Yes, now the rains weep o'er his hall, and not a soul to hear."}}

23:30:23.501 [GatlingSystem-akka.actor.default-dispatcher-11] DEBUG com.intuit.karate - response time in milliseconds: 663
1 < 200
1 < Date: Fri, 04 Nov 2022 18:00:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"166-nhwXV4LrZFl/JxQqkFcml4libUM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=t3B8vNq8VKLx7X5Hqa3GmasQsTQEbR6gBrDp%2BCncsPio8vyPRKEWqM4jQuO4%2FSyQrvbDOBuqYJmm%2FFT%2Ftc8iALxhYG8j9dp0MwCs7MjNPQgLuMRpjgvalKaxfYBCxdI%2B2Zj1"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 764f3fb8bddc7201-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Test_106-99869","title":"Test_106","description":"Test_106","body":"Winter is coming.","tagList":[],"createdAt":"2022-11-04T18:00:23.293Z","updatedAt":"2022-11-04T18:00:23.293Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

23:30:23.505 [GatlingSystem-akka.actor.default-dispatcher-11] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Test_106-99869",
    "title": "Test_106",
    "description": "Test_106",
    "body": "Winter is coming.",
    "tagList": [
    ],
    "createdAt": "2022-11-04T18:00:23.293Z",
    "updatedAt": "2022-11-04T18:00:23.293Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
23:30:23.506 [GatlingSystem-akka.actor.default-dispatcher-11] INFO  com.intuit.karate - [print] Title :: Test_106-99869 
23:30:24.196 [GatlingSystem-akka.actor.default-dispatcher-12] DEBUG com.intuit.karate - response time in milliseconds: 887
1 < 200
1 < Date: Fri, 04 Nov 2022 18:00:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"20e-eElByEFZN1lwbUNK2rawxtA5z+A"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=osCU%2BB3fp6DTCEDvgWTnTEDSoQUARFkKSM05MmNGc7WKIPdABWjvAUmaG9TP%2BT42PDXq%2BNzMGReSpvoAkFrvmuBH6qdS%2FA%2FNpVsYpQVQF4Mg1vF%2F5Pd3fMCN1kBFGecFm88b"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 764f3fbbea9f7747-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Test_107-99869","title":"Test_107","description":"Test_107","body":"And so he spoke, and so he spoke, that Lord of Castamere, but now the rains weep o'er his hall, with no one there to hear. Yes, now the rains weep o'er his hall, and not a soul to hear.","tagList":[],"createdAt":"2022-11-04T18:00:23.845Z","updatedAt":"2022-11-04T18:00:23.845Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

23:30:24.199 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Test_107-99869",
    "title": "Test_107",
    "description": "Test_107",
    "body": "And so he spoke, and so he spoke, that Lord of Castamere, but now the rains weep o'er his hall, with no one there to hear. Yes, now the rains weep o'er his hall, and not a soul to hear.",
    "tagList": [
    ],
    "createdAt": "2022-11-04T18:00:23.845Z",
    "updatedAt": "2022-11-04T18:00:23.845Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
23:30:24.199 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  com.intuit.karate - [print] Title :: Test_107-99869 
23:30:29.203 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  i.g.core.controller.inject.Injector - All users of scenario create and delete Article are stopped
23:30:29.205 [GatlingSystem-akka.actor.default-dispatcher-12] INFO  i.g.core.controller.inject.Injector - Stopping
23:30:29.205 [GatlingSystem-akka.actor.default-dispatcher-8] INFO  i.gatling.core.controller.Controller - Injector has stopped, initiating graceful stop
23:30:29.244 [GatlingSystem-akka.actor.default-dispatcher-7] INFO  akka.actor.CoordinatedShutdown - Running CoordinatedShutdown with reason [ActorSystemTerminateReason]
23:30:29.273 [main] INFO  i.gatling.charts.stats.LogFileReader - Collected List(D:\Karate Framework\karateframework\target\gatling\pertest-20221104180017684\simulation.log) from pertest-20221104180017684
23:30:29.283 [main] INFO  i.gatling.charts.stats.LogFileReader - First pass
23:30:29.287 [main] INFO  i.gatling.charts.stats.LogFileReader - First pass done: read 20 lines
23:30:29.294 [main] INFO  i.gatling.charts.stats.LogFileReader - Second pass
23:30:29.321 [main] INFO  i.gatling.charts.stats.LogFileReader - Second pass: read 20 lines
21:50:36.430 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
21:50:36.588 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
21:50:37.566 [main] INFO  com.intuit.karate - karate.env system property was: QA 
21:50:37.572 [main] INFO  com.intuit.karate - karate.env run with new user : N 
21:50:37.592 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
21:50:37.701 [main] ERROR com.intuit.karate - classpath:Datadriven/login.feature:7
When method Post
'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
21:50:37.703 [main] WARN  com.intuit.karate - callSingle() will cache an exception
21:50:37.703 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
21:50:37.703 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:50:37.722 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:3
Given url baseurlconduit
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
21:50:37.722 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:4
* def datagenerator = Java.type('helper.CreateAddArticFromPoojo')
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
21:50:37.723 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:5
* def articlerequestbody = read("classpath:helper/addarticle.json")
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
21:50:37.724 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* set articlerequestbody.article.title = datagenerator.addarticlejson().title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
21:50:37.725 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:7
* set articlerequestbody.article.description = datagenerator.addarticlejson().description
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
21:50:37.726 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:8
* set articlerequestbody.article.body = datagenerator.addarticlejson().body
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
21:50:37.728 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:9
* set articlerequestbody.article.tagList[0] = datagenerator.addarticlejson().tagList1
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
21:50:37.729 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:10
* set articlerequestbody.article.tagList[1] = datagenerator.addarticlejson().tagList2
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
21:50:37.729 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:14
And path 'articles/'
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
21:50:37.730 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:15
And print 'Access token is :' ,accesstoken1
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
21:50:37.731 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:16
And headers {Accept: 'application/json' ,Authorization:'#("Bearer "+accesstoken1)'}
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
21:50:37.732 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:17
And request articlerequestbody
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
21:50:37.733 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:18
When method Post
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
21:50:37.733 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:19
Then status 200
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
21:50:37.734 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:20
* match response.article.title == articlerequestbody.article.title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
21:50:37.735 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:21
* def title = response.article.slug
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
21:50:37.736 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:22
* print response
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
classpath:Datadriven/addarticleusingpoojoclass.feature:22
21:50:37.737 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:23
* print 'Title ::', title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
classpath:Datadriven/addarticleusingpoojoclass.feature:22
classpath:Datadriven/addarticleusingpoojoclass.feature:23
22:00:52.133 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:00:52.267 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:00:53.142 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:00:53.146 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:00:53.163 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:00:53.261 [main] ERROR com.intuit.karate - classpath:Datadriven/login.feature:7
When method Post
'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
22:00:53.262 [main] WARN  com.intuit.karate - callSingle() will cache an exception
22:00:53.262 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:00:53.262 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
22:00:53.277 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:3
Given url baseurlconduit
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:4
* def datagenerator = Java.type('helper.CreateAddArticFromPoojo')
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:5
* def articlerequestbody = read("classpath:helper/addarticle.json")
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* set articlerequestbody.article.title = datagenerator.addarticlejson().title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:7
* set articlerequestbody.article.description = datagenerator.addarticlejson().description
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:8
* set articlerequestbody.article.body = datagenerator.addarticlejson().body
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:9
* set articlerequestbody.article.tagList[0] = datagenerator.addarticlejson().tagList1
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:10
* set articlerequestbody.article.tagList[1] = datagenerator.addarticlejson().tagList2
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:14
And path 'articles/'
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
22:00:53.278 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:15
And print 'Access token is :' ,accesstoken1
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
22:00:53.279 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:16
And headers {Accept: 'application/json' ,Authorization:'#("Bearer "+accesstoken1)'}
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
22:00:53.279 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:17
And request articlerequestbody
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
22:00:53.279 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:18
When method Post
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
22:00:53.279 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:19
Then status 200
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
22:00:53.279 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:20
* match response.article.title == articlerequestbody.article.title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
22:00:53.280 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:21
* def title = response.article.slug
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
22:00:53.280 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:22
* print response
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
classpath:Datadriven/addarticleusingpoojoclass.feature:22
22:00:53.280 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:23
* print 'Title ::', title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
classpath:Datadriven/addarticleusingpoojoclass.feature:22
classpath:Datadriven/addarticleusingpoojoclass.feature:23
22:02:00.751 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:02:00.846 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:02:01.488 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:02:01.493 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:02:01.510 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:02:01.581 [main] ERROR com.intuit.karate - classpath:Datadriven/login.feature:7
When method Post
'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
22:02:01.582 [main] WARN  com.intuit.karate - callSingle() will cache an exception
22:02:01.582 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:02:01.582 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
22:02:01.596 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:3
Given url baseurlconduit
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
22:02:01.596 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:4
* def datagenerator = Java.type('helper.CreateAddArticFromPoojo')
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
22:02:01.596 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:5
* def articlerequestbody = read("classpath:helper/addarticle.json")
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
22:02:01.596 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* set articlerequestbody.article.title = datagenerator.addarticlejson().title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
22:02:01.597 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:7
* set articlerequestbody.article.description = datagenerator.addarticlejson().description
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
22:02:01.597 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:8
* set articlerequestbody.article.body = datagenerator.addarticlejson().body
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
22:02:01.597 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:9
* set articlerequestbody.article.tagList[0] = datagenerator.addarticlejson().tagList1
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
22:02:01.597 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:10
* set articlerequestbody.article.tagList[1] = datagenerator.addarticlejson().tagList2
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
22:02:01.597 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:14
And path 'articles/'
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
22:02:01.597 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:15
And print 'Access token is :' ,accesstoken1
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:16
And headers {Accept: 'application/json' ,Authorization:'#("Bearer "+accesstoken1)'}
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:17
And request articlerequestbody
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:18
When method Post
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:19
Then status 200
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:20
* match response.article.title == articlerequestbody.article.title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:21
* def title = response.article.slug
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:22
* print response
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
classpath:Datadriven/addarticleusingpoojoclass.feature:22
22:02:01.598 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:23
* print 'Title ::', title
>> classpath:Datadriven/addarticleusingpoojoclass.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/addarticleusingpoojoclass.feature:3
classpath:Datadriven/addarticleusingpoojoclass.feature:4
classpath:Datadriven/addarticleusingpoojoclass.feature:5
classpath:Datadriven/addarticleusingpoojoclass.feature:6
classpath:Datadriven/addarticleusingpoojoclass.feature:7
classpath:Datadriven/addarticleusingpoojoclass.feature:8
classpath:Datadriven/addarticleusingpoojoclass.feature:9
classpath:Datadriven/addarticleusingpoojoclass.feature:10
classpath:Datadriven/addarticleusingpoojoclass.feature:14
classpath:Datadriven/addarticleusingpoojoclass.feature:15
classpath:Datadriven/addarticleusingpoojoclass.feature:16
classpath:Datadriven/addarticleusingpoojoclass.feature:17
classpath:Datadriven/addarticleusingpoojoclass.feature:18
classpath:Datadriven/addarticleusingpoojoclass.feature:19
classpath:Datadriven/addarticleusingpoojoclass.feature:20
classpath:Datadriven/addarticleusingpoojoclass.feature:21
classpath:Datadriven/addarticleusingpoojoclass.feature:22
classpath:Datadriven/addarticleusingpoojoclass.feature:23
22:03:58.605 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:03:58.728 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:03:59.684 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:03:59.690 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:03:59.711 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:03:59.831 [main] ERROR com.intuit.karate - classpath:Datadriven/login.feature:7
When method Post
'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
22:03:59.833 [main] WARN  com.intuit.karate - callSingle() will cache an exception
22:03:59.833 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:03:59.833 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
22:03:59.853 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:6
Given url baseurlconduit
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
22:03:59.854 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:7
* def datagenerator = Java.type('helper.dummydatagenerator')
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
22:03:59.854 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:8
* def articlerequestbody = read("classpath:helper/addarticle.json")
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
22:03:59.855 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:9
* set articlerequestbody.article.title = datagenerator.generatearticle().title
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
22:03:59.855 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:10
* set articlerequestbody.article.description = datagenerator.generatearticle().description
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
22:03:59.855 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:11
* set articlerequestbody.article.body = datagenerator.generatearticle().body
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
22:03:59.855 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:14
And path 'articles/'
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
22:03:59.855 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:15
And print 'Access token is :' ,accesstoken1
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
22:03:59.856 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:16
And headers {Accept: 'application/json' ,Authorization:'#("Bearer "+accesstoken1)'}
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
22:03:59.856 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:17
And request articlerequestbody
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
22:03:59.856 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:18
When method Post
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
classpath:Datadriven/ADD_ARTICLE.feature:18
22:03:59.856 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:19
Then status 200
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
classpath:Datadriven/ADD_ARTICLE.feature:18
classpath:Datadriven/ADD_ARTICLE.feature:19
22:03:59.856 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:20
* match response.article.title == articlerequestbody.article.title
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
classpath:Datadriven/ADD_ARTICLE.feature:18
classpath:Datadriven/ADD_ARTICLE.feature:19
classpath:Datadriven/ADD_ARTICLE.feature:20
22:03:59.856 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:21
* def title = response.article.slug
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
classpath:Datadriven/ADD_ARTICLE.feature:18
classpath:Datadriven/ADD_ARTICLE.feature:19
classpath:Datadriven/ADD_ARTICLE.feature:20
classpath:Datadriven/ADD_ARTICLE.feature:21
22:03:59.857 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:22
* print response
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
classpath:Datadriven/ADD_ARTICLE.feature:18
classpath:Datadriven/ADD_ARTICLE.feature:19
classpath:Datadriven/ADD_ARTICLE.feature:20
classpath:Datadriven/ADD_ARTICLE.feature:21
classpath:Datadriven/ADD_ARTICLE.feature:22
22:03:59.857 [main] ERROR com.intuit.karate - classpath:Datadriven/ADD_ARTICLE.feature:23
* print 'Title ::', title
>> classpath:Datadriven/ADD_ARTICLE.feature:13
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02: 	var env = karate.env; // get system property 'karate.env'
03: 		karate.log('karate.env system property was:', env);
04: 		
05: 	var runwithnewuser = karate.properties['myapp.source'];
06: 	karate.log('karate.env run with new user :', runwithnewuser);
07: 	if (!env) {
08: 		env = 'STG';
09: 	}
10: 	
11: 	// set the global environment and global environment variables
12: 	var config = {
13: 		env: env,
14: 		myVarName: 'someValue',
15: 		baseurlconduit: 'https://api.realworld.io/api/',
16: 		email: 'patildinesh19@hotmail.com',
17: 		password: 'DD123@dd123',
18: 		randomemailaddress: setrandmoemail()
19: 		
20: 	}
21: 	// set the other environment and environment variables 
22: 	if (env == 'dev') {
23: 		config.email = 'patildinesh19@gmail.com',
24: 		config.password = 'DD123@dd123'
25: 
26: 
27: 	} else if (env == 'QA') {
28: 		config.email = 'patildinesh19@yahh.com',
29: 		config.password = 'Test@123'
30: 
31: 	} else if (env == 'STG') {
32: 		config.email = 'patildinesh19@hotmail.com',
33: 		config.password = 'DD123@dd123'
34: 	}
35: 		if(runwithnewuser == 'N')
36: 		{
37: 		var accesstoken = karate.callSingle('classpath:Datadriven/login.feature', config);
38: 		config.accesstoken1 = accesstoken.token;
39: 		config.userdetails = accesstoken.username;
40: 		karate.log('token details', accesstoken);
41: 		}else if(runwithnewuser == 'Y')
42: 		{
43: 		var accesstoken = karate.callSingle('classpath:Datadriven/createnewuser.feature', config);
44: 		config.accesstoken1 = accesstoken.token;
45: 		config.userdetails = accesstoken.username;
46: 		karate.log('token details', accesstoken);
47: 		}
48: 	//************function to generate random values and use those values as environment variables */
49: 
50: 	function setrandmoemail() {
51: 		var emailaddress = '';
52: 		const uuid = Math.random().toString(36).substring(2, 15);
53: 		Math.random().toString().substring(2, 15);
54: 		const email1 = "randomemail_123" + uuid + "@gmail.com";
55: 		var emailaddress = email1;
56: 		return emailaddress;	
57: 	}
58: 
59: 	return config;
60: }
<<<<
org.graalvm.polyglot.PolyglotException: 'java.util.List org.apache.http.client.utils.URIBuilder.getPathSegments()'
classpath:Datadriven/login.feature:7
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:246)
- <js>.fn(Unnamed:37)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1336)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1319)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1308)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:318)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)

classpath:Datadriven/ADD_ARTICLE.feature:6
classpath:Datadriven/ADD_ARTICLE.feature:7
classpath:Datadriven/ADD_ARTICLE.feature:8
classpath:Datadriven/ADD_ARTICLE.feature:9
classpath:Datadriven/ADD_ARTICLE.feature:10
classpath:Datadriven/ADD_ARTICLE.feature:11
classpath:Datadriven/ADD_ARTICLE.feature:14
classpath:Datadriven/ADD_ARTICLE.feature:15
classpath:Datadriven/ADD_ARTICLE.feature:16
classpath:Datadriven/ADD_ARTICLE.feature:17
classpath:Datadriven/ADD_ARTICLE.feature:18
classpath:Datadriven/ADD_ARTICLE.feature:19
classpath:Datadriven/ADD_ARTICLE.feature:20
classpath:Datadriven/ADD_ARTICLE.feature:21
classpath:Datadriven/ADD_ARTICLE.feature:22
classpath:Datadriven/ADD_ARTICLE.feature:23
22:07:19.885 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:07:19.974 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:07:20.612 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:07:20.617 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:07:20.635 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:07:20.972 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

22:07:22.314 [main] DEBUG com.intuit.karate - response time in milliseconds: 1340
1 < 200
1 < Date: Thu, 10 Nov 2022 16:37:20 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-x9IkT0W3Bg4jCIcWB/1Uw6uXoEU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=%2F%2Bh03TJC8feTTbuCjeUp%2B0YUyWGJlTS5vg9VAycbFLSkj2Httn13UWugqiOCoTirO6n5Ql4i78qKdffUHtszNFfqzzE2Jp2gzKHrypMU8SIPzVggq4JkNcz1NrloqyfX78BB"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7680365408897a48-DUS
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk"}}

22:07:22.316 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk"
  }
}
 
22:07:22.320 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
22:07:22.320 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk 
22:07:22.322 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:07:22.323 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Thu, 10 Nov 2022 16:37:20 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-x9IkT0W3Bg4jCIcWB/1Uw6uXoEU\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2F%2Bh03TJC8feTTbuCjeUp%2B0YUyWGJlTS5vg9VAycbFLSkj2Httn13UWugqiOCoTirO6n5Ql4i78qKdffUHtszNFfqzzE2Jp2gzKHrypMU8SIPzVggq4JkNcz1NrloqyfX78BB\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7680365408897a48-DUS"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123txwnq0avweh@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk",
  "username": "dinesh11"
}
 
22:07:22.477 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk 
22:07:22.482 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MjQwLCJleHAiOjE2NzMyODIyNDB9.RKhtBsbARw6O9nLS2eiKGXfXbIzWIsbJ-4r1cz1Wxxk
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 125
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":[],"title":"Tristimun","description":"Norvos","body":"All dwarfs are bastards in their father's eyes"}}

22:07:23.327 [main] DEBUG com.intuit.karate - response time in milliseconds: 845
2 < 200
2 < Date: Thu, 10 Nov 2022 16:37:22 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"183-dAHqsF/pyAAfJrmRAkEJAGIyGbo"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=dJgXd0bSxebzmf%2BbSl21PeMPOYaiWkpThrZgp2XWogKfyDerZDmy6iBMnmJYr7XXWcEeIR1KQzL2IcKsS4bU5zDeTOd6udwDoIHkhhPKAwn7Zgb3Fh%2FVRdUAtWjt0Fy66OBs"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 7680365aabdf9a0f-FRA
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Tristimun-99869","title":"Tristimun","description":"Norvos","body":"All dwarfs are bastards in their father's eyes","tagList":[],"createdAt":"2022-11-10T16:37:21.938Z","updatedAt":"2022-11-10T16:37:21.938Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

22:07:23.351 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Tristimun-99869",
    "title": "Tristimun",
    "description": "Norvos",
    "body": "All dwarfs are bastards in their father's eyes",
    "tagList": [
    ],
    "createdAt": "2022-11-10T16:37:21.938Z",
    "updatedAt": "2022-11-10T16:37:21.938Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
22:07:23.352 [main] INFO  com.intuit.karate - [print] Title :: Tristimun-99869 
22:09:04.453 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:09:04.545 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:09:05.213 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:09:05.218 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:09:05.236 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:09:05.495 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

22:09:06.562 [main] DEBUG com.intuit.karate - response time in milliseconds: 1066
1 < 200
1 < Date: Thu, 10 Nov 2022 16:39:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-10V9Ew+jWfFLS/mm3eXHJbsEBP4"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=%2FUY4hT9PXwJ7QmSVhmtvHJvRBb4FAi4rqI0i2zh2ovxq78cMEd9JoSKKkCpLFRVAGZYJU5YDcZBVCVv3MSuzuBYNk%2FD61iTpEd%2BOmzSK49TME1y2xBv0Bug%2BmuVHpBzmjly%2B"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 768038df9c886997-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MzQ1LCJleHAiOjE2NzMyODIzNDV9.1XbwzL0DwCE3BglmLUc54Zf5OIvBy0NfMw3pGuXtVg4"}}

22:09:06.564 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MzQ1LCJleHAiOjE2NzMyODIzNDV9.1XbwzL0DwCE3BglmLUc54Zf5OIvBy0NfMw3pGuXtVg4"
  }
}
 
22:09:06.568 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
22:09:06.569 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MzQ1LCJleHAiOjE2NzMyODIzNDV9.1XbwzL0DwCE3BglmLUc54Zf5OIvBy0NfMw3pGuXtVg4 
22:09:06.570 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:09:06.571 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Thu, 10 Nov 2022 16:39:05 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-10V9Ew+jWfFLS/mm3eXHJbsEBP4\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2FUY4hT9PXwJ7QmSVhmtvHJvRBb4FAi4rqI0i2zh2ovxq78cMEd9JoSKKkCpLFRVAGZYJU5YDcZBVCVv3MSuzuBYNk%2FD61iTpEd%2BOmzSK49TME1y2xBv0Bug%2BmuVHpBzmjly%2B\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "768038df9c886997-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123m1wnlshhqzj@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MzQ1LCJleHAiOjE2NzMyODIzNDV9.1XbwzL0DwCE3BglmLUc54Zf5OIvBy0NfMw3pGuXtVg4"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4MzQ1LCJleHAiOjE2NzMyODIzNDV9.1XbwzL0DwCE3BglmLUc54Zf5OIvBy0NfMw3pGuXtVg4",
  "username": "dinesh11"
}
 
22:09:06.621 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* set articlerequestbody.article.title = datagenerator.addarticlejson().title
js failed:
>>>>
01: datagenerator.addarticlejson().title
<<<<
org.graalvm.polyglot.PolyglotException: TypeError: invokeMember (addarticlejson) on helper.CreateAddArticFromPoojo failed due to: Unknown identifier: addarticlejson
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingpoojoclass.feature:6
22:15:23.124 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:15:23.222 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:15:23.874 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:15:23.881 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:15:23.902 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:15:24.145 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

22:15:25.285 [main] DEBUG com.intuit.karate - response time in milliseconds: 1138
1 < 200
1 < Date: Thu, 10 Nov 2022 16:45:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-x0PhpZvHOJkrIINX31TUDoMHonc"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=Wwh8HrGJOOPN8SRKSmImOPcJhGQpQejvNAkv%2FSLsmyAVQHuo9LFMmN9h%2FoRT9PECqBENNCFgWiXRCjx5AEvSTW2FYkybVGEZe02b%2FOlfkwBr3dAI9Zmq8QaPiyT1tqoQI4ow"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7680421eca6a76b9-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4NzIzLCJleHAiOjE2NzMyODI3MjN9.dXJO9a6ZEpfX7Z8bYDO5p5TBqrMZ-lNSCrpbvqWnfv8"}}

22:15:25.288 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4NzIzLCJleHAiOjE2NzMyODI3MjN9.dXJO9a6ZEpfX7Z8bYDO5p5TBqrMZ-lNSCrpbvqWnfv8"
  }
}
 
22:15:25.291 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
22:15:25.292 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4NzIzLCJleHAiOjE2NzMyODI3MjN9.dXJO9a6ZEpfX7Z8bYDO5p5TBqrMZ-lNSCrpbvqWnfv8 
22:15:25.293 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:15:25.295 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Thu, 10 Nov 2022 16:45:23 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-x0PhpZvHOJkrIINX31TUDoMHonc\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Wwh8HrGJOOPN8SRKSmImOPcJhGQpQejvNAkv%2FSLsmyAVQHuo9LFMmN9h%2FoRT9PECqBENNCFgWiXRCjx5AEvSTW2FYkybVGEZe02b%2FOlfkwBr3dAI9Zmq8QaPiyT1tqoQI4ow\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7680421eca6a76b9-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123vu4azw0fqyl@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4NzIzLCJleHAiOjE2NzMyODI3MjN9.dXJO9a6ZEpfX7Z8bYDO5p5TBqrMZ-lNSCrpbvqWnfv8"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk4NzIzLCJleHAiOjE2NzMyODI3MjN9.dXJO9a6ZEpfX7Z8bYDO5p5TBqrMZ-lNSCrpbvqWnfv8",
  "username": "dinesh11"
}
 
22:15:25.321 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* print 'title' , datagenerator.addarticlejson().title
js failed:
>>>>
01: karate.log('[print]','title' , datagenerator.addarticlejson().title)
<<<<
org.graalvm.polyglot.PolyglotException: TypeError: invokeMember (addarticlejson) on helper.CreateAddArticFromPoojo failed due to: Unknown identifier: addarticlejson
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingpoojoclass.feature:6
22:21:59.019 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:21:59.104 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:21:59.747 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:21:59.752 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:21:59.772 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:22:00.021 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

22:22:01.190 [main] DEBUG com.intuit.karate - response time in milliseconds: 1168
1 < 200
1 < Date: Thu, 10 Nov 2022 16:51:59 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-rA+T+6fGTFoKSPFtOGI+qiNwaPo"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=zFaMKvitk9VacyrOqcATm0cVLAJnjGPzJxzl4I0k79kQhiY6hK75HfjbcOmI6aUU409%2Bm6iNjz%2BJhRoqXhOQzmukMDi1jrrK8O7nQKDztOfKQ4MqQPIuhzlr7g7H5oR1V60w"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 76804bc8efea6901-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU"}}

22:22:01.193 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU"
  }
}
 
22:22:01.196 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
22:22:01.197 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU 
22:22:01.199 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:22:01.199 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Thu, 10 Nov 2022 16:51:59 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-rA+T+6fGTFoKSPFtOGI+qiNwaPo\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=zFaMKvitk9VacyrOqcATm0cVLAJnjGPzJxzl4I0k79kQhiY6hK75HfjbcOmI6aUU409%2Bm6iNjz%2BJhRoqXhOQzmukMDi1jrrK8O7nQKDztOfKQ4MqQPIuhzlr7g7H5oR1V60w\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "76804bc8efea6901-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123d4y8sv1vguh@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU",
  "username": "dinesh11"
}
 
22:22:01.221 [main] INFO  com.intuit.karate - [print] title History_automation_123 
22:22:01.231 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU 
22:22:01.234 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5MTE5LCJleHAiOjE2NzMyODMxMTl9.W5eJ9CsKAJU8ffs_oD334wHvylzO3lQMibeeABmFTVU
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 119
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["ABC2","ABC2"],"title":"History_automation_123","description":"sdfdsdf","body":"test_test_567"}}

22:22:02.070 [main] DEBUG com.intuit.karate - response time in milliseconds: 836
2 < 200
2 < Date: Thu, 10 Nov 2022 16:52:00 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"183-n80jLnW6W5zaLmAQ57GTvq5htIg"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=IlAsr62UBy2bZ2hnMIz8Cx%2FoENYk34%2Bw8ScJkfnCF58k36%2B%2BUS5Xk1y%2Bc%2F1gMDA8kRRASUo%2BsnCMThIy3OptxS4Ao9Qk%2F%2B2HW2sxOoVJPg%2BfgJ6ZpdjDEx%2BwW5hbAlOUulqj"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 76804bcf2e666977-FRA
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"History_automation_123-99869","title":"History_automation_123","description":"sdfdsdf","body":"test_test_567","tagList":["ABC2"],"createdAt":"2022-11-10T16:52:00.686Z","updatedAt":"2022-11-10T16:52:00.686Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

22:22:02.081 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "History_automation_123-99869",
    "title": "History_automation_123",
    "description": "sdfdsdf",
    "body": "test_test_567",
    "tagList": [
      "ABC2"
    ],
    "createdAt": "2022-11-10T16:52:00.686Z",
    "updatedAt": "2022-11-10T16:52:00.686Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
22:22:02.082 [main] INFO  com.intuit.karate - [print] Title :: History_automation_123-99869 
22:24:56.540 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:24:56.628 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:24:57.282 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:24:57.286 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:24:57.303 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:24:57.566 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

22:24:58.588 [main] DEBUG com.intuit.karate - response time in milliseconds: 1021
1 < 200
1 < Date: Thu, 10 Nov 2022 16:54:57 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-J0+HG3m8pTcoZetORqnbXzYdzB8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=IEWnynYRUtMwQSpzg9lOuO%2FLp0%2BZgpD%2FcLIHGoivYNWdVQrzfEkNwRLtdWJZ7PUMPSctBqDpoD3BakxjTMFlh8LdOedEpiW0t08ZAETa7%2Bt7dM1WjBbbsAt7quWbL5lEVXwG"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7680501d98d55b80-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng"}}

22:24:58.592 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng"
  }
}
 
22:24:58.595 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
22:24:58.596 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng 
22:24:58.597 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:24:58.598 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Thu, 10 Nov 2022 16:54:57 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-J0+HG3m8pTcoZetORqnbXzYdzB8\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=IEWnynYRUtMwQSpzg9lOuO%2FLp0%2BZgpD%2FcLIHGoivYNWdVQrzfEkNwRLtdWJZ7PUMPSctBqDpoD3BakxjTMFlh8LdOedEpiW0t08ZAETa7%2Bt7dM1WjBbbsAt7quWbL5lEVXwG\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7680501d98d55b80-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123od2tkft8rn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng",
  "username": "dinesh11"
}
 
22:24:58.613 [main] INFO  com.intuit.karate - [print] title History_automation_123 
22:24:58.620 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng 
22:24:58.623 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MDk5Mjk3LCJleHAiOjE2NzMyODMyOTd9.7pc8qv_bq1FbDu7Ud8mKooEeHL0tgCNHTIs11UZDVng
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 119
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["ABC1","ABC2"],"title":"History_automation_123","description":"sdfdsdf","body":"test_test_567"}}

22:24:59.378 [main] DEBUG com.intuit.karate - response time in milliseconds: 755
2 < 200
2 < Date: Thu, 10 Nov 2022 16:54:58 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"18a-3dvfW9dApjfiW7pWpoI4NgUy3No"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=t4zo4K9WZBfB7AZixo336fceKimmG14lw2MQO1P3ZqFqGg3uoepB2lVXjIk5zSkb6%2F%2B1IHwSRbwStG2UFiV0d7SlxNKIr%2BTsGNpetVqyJVfSYZQJ7vNECQ1liS%2BAZXXcv9uf"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 768050233a7c9a3f-FRA
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"History_automation_123-99869","title":"History_automation_123","description":"sdfdsdf","body":"test_test_567","tagList":["ABC2","ABC1"],"createdAt":"2022-11-10T16:54:57.966Z","updatedAt":"2022-11-10T16:54:57.966Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

22:24:59.388 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "History_automation_123-99869",
    "title": "History_automation_123",
    "description": "sdfdsdf",
    "body": "test_test_567",
    "tagList": [
      "ABC2",
      "ABC1"
    ],
    "createdAt": "2022-11-10T16:54:57.966Z",
    "updatedAt": "2022-11-10T16:54:57.966Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
22:24:59.389 [main] INFO  com.intuit.karate - [print] Title :: History_automation_123-99869 
18:53:38.158 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
18:53:38.277 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
18:53:39.226 [main] INFO  com.intuit.karate - karate.env system property was: QA 
18:53:39.233 [main] INFO  com.intuit.karate - karate.env run with new user : N 
18:53:39.255 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
18:53:39.636 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

18:53:45.246 [main] DEBUG com.intuit.karate - response time in milliseconds: 5606
1 < 200
1 < Date: Fri, 11 Nov 2022 13:23:40 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-Q9hNDJ23n2gx6vV2wGuKoK1uDVg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=ol1n0c6n6wM6r%2Bsr9rTQXL36kzi8BWaKT465Apwvv39vGhA09nfyEr0piYYqZGX5LV4RrUSYNcIRGXVnVD3gFxm6hOW59ucCG1PbYzViiuGUOOJYrI17%2FI0Zqoq0%2F0yxfrFd"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 768757fd49fe88a1-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMDE5LCJleHAiOjE2NzMzNTcwMTl9.JRNwFXh5tpr4BN5HkwfHQvpN3gMfD4cD7q3XiW2JAH0"}}

18:53:45.251 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMDE5LCJleHAiOjE2NzMzNTcwMTl9.JRNwFXh5tpr4BN5HkwfHQvpN3gMfD4cD7q3XiW2JAH0"
  }
}
 
18:53:45.256 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
18:53:45.257 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMDE5LCJleHAiOjE2NzMzNTcwMTl9.JRNwFXh5tpr4BN5HkwfHQvpN3gMfD4cD7q3XiW2JAH0 
18:53:45.260 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
18:53:45.263 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 13:23:40 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-Q9hNDJ23n2gx6vV2wGuKoK1uDVg\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ol1n0c6n6wM6r%2Bsr9rTQXL36kzi8BWaKT465Apwvv39vGhA09nfyEr0piYYqZGX5LV4RrUSYNcIRGXVnVD3gFxm6hOW59ucCG1PbYzViiuGUOOJYrI17%2FI0Zqoq0%2F0yxfrFd\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "768757fd49fe88a1-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123b1f8vo99qg9@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMDE5LCJleHAiOjE2NzMzNTcwMTl9.JRNwFXh5tpr4BN5HkwfHQvpN3gMfD4cD7q3XiW2JAH0"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMDE5LCJleHAiOjE2NzMzNTcwMTl9.JRNwFXh5tpr4BN5HkwfHQvpN3gMfD4cD7q3XiW2JAH0",
  "username": "dinesh11"
}
 
18:53:45.301 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* print 'title' , datagenerator.addarticlejson().title
js failed:
>>>>
01: karate.log('[print]','title' , datagenerator.addarticlejson().title)
<<<<
org.graalvm.polyglot.PolyglotException: D:\Karate Framework\karateframework\src\main\java\helper\payload.xlsx (The system cannot find the path specified)
- java.base/java.io.FileInputStream.open0(Native Method)
- java.base/java.io.FileInputStream.open(FileInputStream.java:216)
- java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
- java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
- helper.readexcelandcreatejson.readexceldata(readexcelandcreatejson.java:55)
- helper.readexcelandcreatejson.addarticlejson(readexcelandcreatejson.java:21)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingpoojoclass.feature:6
18:56:16.989 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
18:56:17.084 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
18:56:17.851 [main] INFO  com.intuit.karate - karate.env system property was: QA 
18:56:17.857 [main] INFO  com.intuit.karate - karate.env run with new user : N 
18:56:17.881 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
18:56:18.220 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

18:56:19.999 [main] DEBUG com.intuit.karate - response time in milliseconds: 1775
1 < 200
1 < Date: Fri, 11 Nov 2022 13:26:19 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-9bMb3dzNXXEukcV2KkA2rxf4p0w"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=9FJwIy3UEGAaUNlwV5P0B0SFQ%2FZLx5O9KrcmxHgbqE%2BLqTsuUHE54DWotKuWY1rpHjNT%2FMKUc5nofUZC1HJYCmt9F3R%2B4s%2BC68KKypuQgNIB9CUv%2FYpFR1u99BhiaM5Tmyn4"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 76875bdf8b79dd47-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMTc5LCJleHAiOjE2NzMzNTcxNzl9.RGd1rKuuZ1WzLp-q3SYDiM5-j-vjeAc-P_hDEdjxhjc"}}

18:56:20.005 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMTc5LCJleHAiOjE2NzMzNTcxNzl9.RGd1rKuuZ1WzLp-q3SYDiM5-j-vjeAc-P_hDEdjxhjc"
  }
}
 
18:56:20.012 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
18:56:20.014 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMTc5LCJleHAiOjE2NzMzNTcxNzl9.RGd1rKuuZ1WzLp-q3SYDiM5-j-vjeAc-P_hDEdjxhjc 
18:56:20.016 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
18:56:20.017 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 13:26:19 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-9bMb3dzNXXEukcV2KkA2rxf4p0w\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=9FJwIy3UEGAaUNlwV5P0B0SFQ%2FZLx5O9KrcmxHgbqE%2BLqTsuUHE54DWotKuWY1rpHjNT%2FMKUc5nofUZC1HJYCmt9F3R%2B4s%2BC68KKypuQgNIB9CUv%2FYpFR1u99BhiaM5Tmyn4\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "76875bdf8b79dd47-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123m4lp9vb7wad@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMTc5LCJleHAiOjE2NzMzNTcxNzl9.RGd1rKuuZ1WzLp-q3SYDiM5-j-vjeAc-P_hDEdjxhjc"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMTc5LCJleHAiOjE2NzMzNTcxNzl9.RGd1rKuuZ1WzLp-q3SYDiM5-j-vjeAc-P_hDEdjxhjc",
  "username": "dinesh11"
}
 
18:56:20.052 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:6
* print 'title' , datagenerator.addarticlejson().title
js failed:
>>>>
01: karate.log('[print]','title' , datagenerator.addarticlejson().title)
<<<<
org.graalvm.polyglot.PolyglotException: D:\Karate Framework\karateframework\src\main\java\helper\payload.xlsx (The system cannot find the path specified)
- java.base/java.io.FileInputStream.open0(Native Method)
- java.base/java.io.FileInputStream.open(FileInputStream.java:216)
- java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
- java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
- helper.readexcelandcreatejson.readexceldata(readexcelandcreatejson.java:56)
- helper.readexcelandcreatejson.addarticlejson(readexcelandcreatejson.java:21)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingpoojoclass.feature:6
18:58:56.483 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
18:58:56.580 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
18:58:57.333 [main] INFO  com.intuit.karate - karate.env system property was: QA 
18:58:57.340 [main] INFO  com.intuit.karate - karate.env run with new user : N 
18:58:57.360 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
18:58:57.693 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

18:59:02.283 [main] DEBUG com.intuit.karate - response time in milliseconds: 4586
1 < 200
1 < Date: Fri, 11 Nov 2022 13:29:00 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-FkgPpbUZJrrL2i1F6/4qtOENLuc"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=ApgQTEhjp3sgEOzk3uOAX%2FQ6lHSCO%2F2GLz8JtytUODG6cdFpGwleiE1M0%2BWXJV%2BYksu8hJ69lwAAr8x5YvZmYnPbduWc%2B5OxH83L%2FROQ0KnJhlLV6YG9UrD4zOKkn2txZ0F3"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 76875fd1af2d690f-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE"}}

18:59:02.289 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE"
  }
}
 
18:59:02.295 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
18:59:02.296 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE 
18:59:02.298 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
18:59:02.299 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 13:29:00 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-FkgPpbUZJrrL2i1F6/4qtOENLuc\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ApgQTEhjp3sgEOzk3uOAX%2FQ6lHSCO%2F2GLz8JtytUODG6cdFpGwleiE1M0%2BWXJV%2BYksu8hJ69lwAAr8x5YvZmYnPbduWc%2B5OxH83L%2FROQ0KnJhlLV6YG9UrD4zOKkn2txZ0F3\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "76875fd1af2d690f-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123sl7uyx51u4@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE",
  "username": "dinesh11"
}
 
18:59:02.828 [main] INFO  com.intuit.karate - [print] title Cucumber_Maven_history_11 
18:59:02.941 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE 
18:59:02.945 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTczMzQwLCJleHAiOjE2NzMzNTczNDB9.0f6UvafqLrEQi6kZJL8H8jqHn3D_VVoHIDJ-en_nKCE
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 137
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["xyt1","xyt2"],"title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090"}}

18:59:03.657 [main] DEBUG com.intuit.karate - response time in milliseconds: 711
2 < 200
2 < Date: Fri, 11 Nov 2022 13:29:02 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"19f-dEwirzO/oGOyUVKNV9dx2Y7JTKU"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=NVSFwt255O%2FKIMIKxBlxlpgRWWrqSKqsXaPGmAqIRmcRRuZoMpHfoHErdJa84MSwcnolNusPvTLoS6ecHJN0uRR%2FHGzipfExzMQnT6Z3f3BsLa9tcmppJZIF4D7TAM23dw4x"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 76875fdeac889b2b-FRA
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Cucumber_Maven_history_11-99869","title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090","tagList":["xyt1","xyt2"],"createdAt":"2022-11-11T13:29:02.669Z","updatedAt":"2022-11-11T13:29:02.669Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

18:59:03.689 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Cucumber_Maven_history_11-99869",
    "title": "Cucumber_Maven_history_11",
    "description": "cucumber Automation Project",
    "body": "test9090",
    "tagList": [
      "xyt1",
      "xyt2"
    ],
    "createdAt": "2022-11-11T13:29:02.669Z",
    "updatedAt": "2022-11-11T13:29:02.669Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
18:59:03.692 [main] INFO  com.intuit.karate - [print] Title :: Cucumber_Maven_history_11-99869 
21:40:49.070 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
21:40:49.175 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
21:40:49.969 [main] INFO  com.intuit.karate - karate.env system property was: QA 
21:40:49.974 [main] INFO  com.intuit.karate - karate.env run with new user : N 
21:40:49.998 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
21:40:50.354 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

21:40:51.774 [main] DEBUG com.intuit.karate - response time in milliseconds: 1419
1 < 200
1 < Date: Fri, 11 Nov 2022 16:10:50 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-cJ4+88A0nWsu5niRsc+U/lOH9xU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=LDqVlXd3pppM0mgZqkdSOaucDAAfZEj15NLdM6vxaeKh9IN6kRLAvJgu3XRAHrGIvKL8ZL1JhilEUtIpONox2YGX8HgbaITfJ2Xnzw686acG%2FVAXn%2BHNUHOnHdP31xAZuWB1"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 76884ce0db1f71fe-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDUwLCJleHAiOjE2NzMzNjcwNTB9.nagTRk6QCgKgdTDDQQobopoOgFuTsnog6gr2NEFg33k"}}

21:40:51.777 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDUwLCJleHAiOjE2NzMzNjcwNTB9.nagTRk6QCgKgdTDDQQobopoOgFuTsnog6gr2NEFg33k"
  }
}
 
21:40:51.781 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
21:40:51.781 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDUwLCJleHAiOjE2NzMzNjcwNTB9.nagTRk6QCgKgdTDDQQobopoOgFuTsnog6gr2NEFg33k 
21:40:51.782 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
21:40:51.783 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 16:10:50 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-cJ4+88A0nWsu5niRsc+U/lOH9xU\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=LDqVlXd3pppM0mgZqkdSOaucDAAfZEj15NLdM6vxaeKh9IN6kRLAvJgu3XRAHrGIvKL8ZL1JhilEUtIpONox2YGX8HgbaITfJ2Xnzw686acG%2FVAXn%2BHNUHOnHdP31xAZuWB1\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "76884ce0db1f71fe-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123nwdpteq7skd@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDUwLCJleHAiOjE2NzMzNjcwNTB9.nagTRk6QCgKgdTDDQQobopoOgFuTsnog6gr2NEFg33k"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDUwLCJleHAiOjE2NzMzNjcwNTB9.nagTRk6QCgKgdTDDQQobopoOgFuTsnog6gr2NEFg33k",
  "username": "dinesh11"
}
 
21:40:51.804 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingpoojoclass.feature:7
* print 'title' , datagenerator1.addarticlejson().title
js failed:
>>>>
01: karate.log('[print]','title' , datagenerator1.addarticlejson().title)
<<<<
org.graalvm.polyglot.PolyglotException: ReferenceError: "datagenerator1" is not defined
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingpoojoclass.feature:7
21:41:34.566 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
21:41:34.649 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
21:41:35.316 [main] INFO  com.intuit.karate - karate.env system property was: QA 
21:41:35.320 [main] INFO  com.intuit.karate - karate.env run with new user : N 
21:41:35.339 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
21:41:35.595 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

21:41:36.827 [main] DEBUG com.intuit.karate - response time in milliseconds: 1231
1 < 200
1 < Date: Fri, 11 Nov 2022 16:11:35 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-OHhqTIC7GpkgzNQh43Saf/utZAA"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=hrkdYxqbrugkxugAaN4GLYhjNsw4U%2FXf8yFMBf%2FoyuclUpLZ5%2FOAPIhX0S9RBev6piNcTcHY8EIo2bZADkU09t2aVT7RX4ZPfbY1XwbpJQ%2BVIugCyZw7pK38GtK5CQJjJOQZ"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 76884dfa6a40dd3b-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4"}}

21:41:36.831 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4"
  }
}
 
21:41:36.834 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
21:41:36.834 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4 
21:41:36.836 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
21:41:36.837 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 16:11:35 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-OHhqTIC7GpkgzNQh43Saf/utZAA\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=hrkdYxqbrugkxugAaN4GLYhjNsw4U%2FXf8yFMBf%2FoyuclUpLZ5%2FOAPIhX0S9RBev6piNcTcHY8EIo2bZADkU09t2aVT7RX4ZPfbY1XwbpJQ%2BVIugCyZw7pK38GtK5CQJjJOQZ\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "76884dfa6a40dd3b-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1236ng8mtqz1pb@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4",
  "username": "dinesh11"
}
 
21:41:39.506 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4 
21:41:39.509 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTgzMDk1LCJleHAiOjE2NzMzNjcwOTV9.CshakHXiPEBnWbta1Zvtt6423Wn3Pp8RNmXIDsVn9G4
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 137
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["xyt1","xyt2"],"title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090"}}

21:41:40.396 [main] DEBUG com.intuit.karate - response time in milliseconds: 887
2 < 200
2 < Date: Fri, 11 Nov 2022 16:11:39 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"19f-bBXGVdgStp9RwiL1a9Wq7vNPIWE"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=eIj%2BHk7js51iKTc11CVjiDpQYqPdtdwsgXAWQNsNQeuNPIGY%2FVPk5C2Yf3EHH0u%2Bwc%2BHvzSCOIaP85jrvfZO9INPBiYKoc2WLYJYLkBw6LoGzTWK2liei3L088DlWOijA%2FHA"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 76884e11bd1edd13-LHR
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Cucumber_Maven_history_11-99869","title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090","tagList":["xyt1","xyt2"],"createdAt":"2022-11-11T16:11:39.302Z","updatedAt":"2022-11-11T16:11:39.302Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

21:41:40.429 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Cucumber_Maven_history_11-99869",
    "title": "Cucumber_Maven_history_11",
    "description": "cucumber Automation Project",
    "body": "test9090",
    "tagList": [
      "xyt1",
      "xyt2"
    ],
    "createdAt": "2022-11-11T16:11:39.302Z",
    "updatedAt": "2022-11-11T16:11:39.302Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
21:41:40.431 [main] INFO  com.intuit.karate - [print] Title :: Cucumber_Maven_history_11-99869 
22:50:09.541 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
22:50:09.622 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
22:50:10.390 [main] INFO  com.intuit.karate - karate.env system property was: QA 
22:50:10.396 [main] INFO  com.intuit.karate - karate.env run with new user : N 
22:50:10.418 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
22:50:10.738 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

22:50:12.687 [main] DEBUG com.intuit.karate - response time in milliseconds: 1947
1 < 200
1 < Date: Fri, 11 Nov 2022 17:20:11 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-/jcdnccbtHiZHOjv3j0SddOx2rQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=31eXtYhH%2FB5LfJsfZChFcUNvUdzeuhQi15a2bc2Bw5frh36LzLv5rnVy0XicqafjerDE1oGhddVKLrX66B1%2BI10miuIJhU9bL3LmyWbkcnQQPSgIznK7T0%2B%2BlpsrLSyVCoxH"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7688b276aa7e6d7d-MUC
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg3MjExLCJleHAiOjE2NzMzNzEyMTF9.ORr1s06qpTRmqIbzlFardDIO7_3c3rfJmkUxupjeTUo"}}

22:50:12.693 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg3MjExLCJleHAiOjE2NzMzNzEyMTF9.ORr1s06qpTRmqIbzlFardDIO7_3c3rfJmkUxupjeTUo"
  }
}
 
22:50:12.698 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
22:50:12.699 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg3MjExLCJleHAiOjE2NzMzNzEyMTF9.ORr1s06qpTRmqIbzlFardDIO7_3c3rfJmkUxupjeTUo 
22:50:12.701 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
22:50:12.702 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 17:20:11 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-/jcdnccbtHiZHOjv3j0SddOx2rQ\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=31eXtYhH%2FB5LfJsfZChFcUNvUdzeuhQi15a2bc2Bw5frh36LzLv5rnVy0XicqafjerDE1oGhddVKLrX66B1%2BI10miuIJhU9bL3LmyWbkcnQQPSgIznK7T0%2B%2BlpsrLSyVCoxH\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7688b276aa7e6d7d-MUC"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123ra11kuomm8n@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg3MjExLCJleHAiOjE2NzMzNzEyMTF9.ORr1s06qpTRmqIbzlFardDIO7_3c3rfJmkUxupjeTUo"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg3MjExLCJleHAiOjE2NzMzNzEyMTF9.ORr1s06qpTRmqIbzlFardDIO7_3c3rfJmkUxupjeTUo",
  "username": "dinesh11"
}
 
22:50:12.728 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingautocreatedjson.feature:5
* def articlerequestbody = read("classpath:helper/addarticle_1.json")
js failed:
>>>>
01: read("classpath:helper/addarticle_1.json")
<<<<
org.graalvm.polyglot.PolyglotException: not found: helper/addarticle_1.json
- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:118)
- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:128)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:102)
- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:98)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:56)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:129)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingautocreatedjson.feature:5
23:04:15.875 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:04:15.948 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:04:16.608 [main] INFO  com.intuit.karate - karate.env system property was: QA 
23:04:16.614 [main] INFO  com.intuit.karate - karate.env run with new user : N 
23:04:16.632 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
23:04:16.897 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

23:04:18.185 [main] DEBUG com.intuit.karate - response time in milliseconds: 1285
1 < 200
1 < Date: Fri, 11 Nov 2022 17:34:17 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-0PmJvAMfQ0+jVUxaIydO0c4X9mI"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=mUj2uvrR%2BAtbaSURenbugYeIvW2mNGHxEiqjqLMvlQD%2FWMcc3rcdNuWJv%2Bpf%2BTg%2FnXjfUa0pSt9UV6wbjjtdyl80EUbg0szVWFxE2eKp01K7ShmPPrexq30ImkCuN7N0BKWI"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7688c71add486943-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MDU3LCJleHAiOjE2NzMzNzIwNTd9.JiFErcYQ2N5sHezO-c6j8poMW-JTELz6Yd8tTgEe_EQ"}}

23:04:18.188 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MDU3LCJleHAiOjE2NzMzNzIwNTd9.JiFErcYQ2N5sHezO-c6j8poMW-JTELz6Yd8tTgEe_EQ"
  }
}
 
23:04:18.192 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
23:04:18.193 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MDU3LCJleHAiOjE2NzMzNzIwNTd9.JiFErcYQ2N5sHezO-c6j8poMW-JTELz6Yd8tTgEe_EQ 
23:04:18.196 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
23:04:18.197 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 17:34:17 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-0PmJvAMfQ0+jVUxaIydO0c4X9mI\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=mUj2uvrR%2BAtbaSURenbugYeIvW2mNGHxEiqjqLMvlQD%2FWMcc3rcdNuWJv%2Bpf%2BTg%2FnXjfUa0pSt9UV6wbjjtdyl80EUbg0szVWFxE2eKp01K7ShmPPrexq30ImkCuN7N0BKWI\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7688c71add486943-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123ac1runz8azn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MDU3LCJleHAiOjE2NzMzNzIwNTd9.JiFErcYQ2N5sHezO-c6j8poMW-JTELz6Yd8tTgEe_EQ"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MDU3LCJleHAiOjE2NzMzNzIwNTd9.JiFErcYQ2N5sHezO-c6j8poMW-JTELz6Yd8tTgEe_EQ",
  "username": "dinesh11"
}
 
23:04:18.216 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingautocreatedjson.feature:5
* def articlerequestbody = read("classpath:helper/addarticle_1.json")
js failed:
>>>>
01: read("classpath:helper/addarticle_1.json")
<<<<
org.graalvm.polyglot.PolyglotException: not found: helper/addarticle_1.json
- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:118)
- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:128)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:102)
- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:98)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:56)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:129)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingautocreatedjson.feature:5
23:07:23.154 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:07:23.229 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:07:23.939 [main] INFO  com.intuit.karate - karate.env system property was: QA 
23:07:23.944 [main] INFO  com.intuit.karate - karate.env run with new user : N 
23:07:23.964 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
23:07:24.244 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

23:07:25.580 [main] DEBUG com.intuit.karate - response time in milliseconds: 1335
1 < 200
1 < Date: Fri, 11 Nov 2022 17:37:24 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-KtlEkYYzub+TAEKOxV/AKNvgbcg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=4U6rs7yXdK4WMDQximHQUqyCpnm3JjVdB0qRrOa3076Dggl3ociFiUbonZ4QAUE3H6KxFpb0aWwWnvXSBpyU4Oj9a4oELPv7jgVhPrYL8yVIyfpkwI5IyclfCsysbgXfm0Xz"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7688cbad7d5b9a03-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MjQ0LCJleHAiOjE2NzMzNzIyNDR9.utZ2A054RlBrQynuuXmOGyHiVYEyPFUf49_YJd91eA0"}}

23:07:25.583 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MjQ0LCJleHAiOjE2NzMzNzIyNDR9.utZ2A054RlBrQynuuXmOGyHiVYEyPFUf49_YJd91eA0"
  }
}
 
23:07:25.587 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
23:07:25.588 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MjQ0LCJleHAiOjE2NzMzNzIyNDR9.utZ2A054RlBrQynuuXmOGyHiVYEyPFUf49_YJd91eA0 
23:07:25.589 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
23:07:25.590 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 17:37:24 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-KtlEkYYzub+TAEKOxV/AKNvgbcg\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4U6rs7yXdK4WMDQximHQUqyCpnm3JjVdB0qRrOa3076Dggl3ociFiUbonZ4QAUE3H6KxFpb0aWwWnvXSBpyU4Oj9a4oELPv7jgVhPrYL8yVIyfpkwI5IyclfCsysbgXfm0Xz\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7688cbad7d5b9a03-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1231ztk7c7l64vi@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MjQ0LCJleHAiOjE2NzMzNzIyNDR9.utZ2A054RlBrQynuuXmOGyHiVYEyPFUf49_YJd91eA0"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4MjQ0LCJleHAiOjE2NzMzNzIyNDR9.utZ2A054RlBrQynuuXmOGyHiVYEyPFUf49_YJd91eA0",
  "username": "dinesh11"
}
 
23:07:26.050 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingautocreatedjson.feature:6
* def articlerequestbody = read("classpath:helper/addarticle_1.json")
js failed:
>>>>
01: read("classpath:helper/addarticle_1.json")
<<<<
org.graalvm.polyglot.PolyglotException: not found: helper/addarticle_1.json
- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:118)
- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:128)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:102)
- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:98)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:56)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:129)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingautocreatedjson.feature:6
23:08:15.021 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
23:08:15.101 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
23:08:15.753 [main] INFO  com.intuit.karate - karate.env system property was: QA 
23:08:15.758 [main] INFO  com.intuit.karate - karate.env run with new user : N 
23:08:15.778 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
23:08:16.048 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

23:08:17.087 [main] DEBUG com.intuit.karate - response time in milliseconds: 1037
1 < 200
1 < Date: Fri, 11 Nov 2022 17:38:16 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-6D6u/fX3R9bDL2sLOyle968PRIE"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=Wz3d%2FcXsEVQqIHTPpt0dNF0xY7tC2qOgHsK9twpeZdDTtxkIK4Xe%2FOP97O8Mwo0JLg6HazcuvmfDhHuUlmW%2Fvidk9tbgHbIp3nqLmubWXXZigic7AgI14fkytUtg8jjP3D0w"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 7688ccf06c625c0e-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4Mjk2LCJleHAiOjE2NzMzNzIyOTZ9.EarSMmUKEJnfzGO0QxQWbhSBnFfed6r1BG2kDXaYfpQ"}}

23:08:17.090 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4Mjk2LCJleHAiOjE2NzMzNzIyOTZ9.EarSMmUKEJnfzGO0QxQWbhSBnFfed6r1BG2kDXaYfpQ"
  }
}
 
23:08:17.094 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
23:08:17.095 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4Mjk2LCJleHAiOjE2NzMzNzIyOTZ9.EarSMmUKEJnfzGO0QxQWbhSBnFfed6r1BG2kDXaYfpQ 
23:08:17.097 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
23:08:17.098 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Fri, 11 Nov 2022 17:38:16 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-6D6u/fX3R9bDL2sLOyle968PRIE\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Wz3d%2FcXsEVQqIHTPpt0dNF0xY7tC2qOgHsK9twpeZdDTtxkIK4Xe%2FOP97O8Mwo0JLg6HazcuvmfDhHuUlmW%2Fvidk9tbgHbIp3nqLmubWXXZigic7AgI14fkytUtg8jjP3D0w\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "7688ccf06c625c0e-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_12362yo96osq9w@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4Mjk2LCJleHAiOjE2NzMzNzIyOTZ9.EarSMmUKEJnfzGO0QxQWbhSBnFfed6r1BG2kDXaYfpQ"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MTg4Mjk2LCJleHAiOjE2NzMzNzIyOTZ9.EarSMmUKEJnfzGO0QxQWbhSBnFfed6r1BG2kDXaYfpQ",
  "username": "dinesh11"
}
 
23:08:17.539 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingautocreatedjson.feature:6
* def articlerequestbody = read("classpath:helper/addarticle_1.json")
js failed:
>>>>
01: read("classpath:helper/addarticle_1.json")
<<<<
org.graalvm.polyglot.PolyglotException: not found: helper/addarticle_1.json
- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:118)
- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:128)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:102)
- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:98)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:56)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:129)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingautocreatedjson.feature:6
11:51:21.574 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
11:51:21.691 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
11:51:22.460 [main] INFO  com.intuit.karate - karate.env system property was: QA 
11:51:22.467 [main] INFO  com.intuit.karate - karate.env run with new user : N 
11:51:22.485 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
11:51:22.818 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

11:51:33.126 [main] DEBUG com.intuit.karate - response time in milliseconds: 10306
1 < 200
1 < Date: Sat, 12 Nov 2022 06:21:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-vF4bGoAbj7rxRxfAWScki66CPH4"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=kzi5LtO2GRiSXWoUqxtDmrKSIP9tLDGAwSnnvHDuMB2f4kPbZR3phVstNybZR6Oe5FbOxi%2BHy%2BLcGo9u4I7enqULJNF6ZFeF53ft54u8yf%2F2zot2nbqyfqRNrM8AB8I%2BSr1b"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 768d2ac9998a7463-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MDgzLCJleHAiOjE2NzM0MTgwODN9.S1mzFwhnPDRg-OflcOJx_bxmYuDAC-CE-xaGWx7Zedk"}}

11:51:33.129 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MDgzLCJleHAiOjE2NzM0MTgwODN9.S1mzFwhnPDRg-OflcOJx_bxmYuDAC-CE-xaGWx7Zedk"
  }
}
 
11:51:33.133 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
11:51:33.134 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MDgzLCJleHAiOjE2NzM0MTgwODN9.S1mzFwhnPDRg-OflcOJx_bxmYuDAC-CE-xaGWx7Zedk 
11:51:33.135 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
11:51:33.136 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 12 Nov 2022 06:21:23 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-vF4bGoAbj7rxRxfAWScki66CPH4\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=kzi5LtO2GRiSXWoUqxtDmrKSIP9tLDGAwSnnvHDuMB2f4kPbZR3phVstNybZR6Oe5FbOxi%2BHy%2BLcGo9u4I7enqULJNF6ZFeF53ft54u8yf%2F2zot2nbqyfqRNrM8AB8I%2BSr1b\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "768d2ac9998a7463-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123xz9k7u4xqng@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MDgzLCJleHAiOjE2NzM0MTgwODN9.S1mzFwhnPDRg-OflcOJx_bxmYuDAC-CE-xaGWx7Zedk"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MDgzLCJleHAiOjE2NzM0MTgwODN9.S1mzFwhnPDRg-OflcOJx_bxmYuDAC-CE-xaGWx7Zedk",
  "username": "dinesh11"
}
 
11:51:33.687 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingautocreatedjson.feature:6
* def articlerequestbody = read("classpath:helper/addarticle_1.json")
js failed:
>>>>
01: read("classpath:helper/addarticle_1.json")
<<<<
org.graalvm.polyglot.PolyglotException: not found: helper/addarticle_1.json
- com.intuit.karate.resource.ResourceUtils.getResource(ResourceUtils.java:118)
- com.intuit.karate.core.ScenarioFileReader.toResource(ScenarioFileReader.java:128)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:102)
- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:98)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:56)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:129)
- <js>.:program(Unnamed:1)

classpath:Datadriven/addarticleusingautocreatedjson.feature:6
11:56:02.073 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
11:56:02.153 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
11:56:02.795 [main] INFO  com.intuit.karate - karate.env system property was: QA 
11:56:02.800 [main] INFO  com.intuit.karate - karate.env run with new user : N 
11:56:02.821 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
11:56:03.090 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

11:56:04.750 [main] DEBUG com.intuit.karate - response time in milliseconds: 1658
1 < 200
1 < Date: Sat, 12 Nov 2022 06:26:02 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-MLzf9hC0WZfPIM2L/TawZuQ1yTk"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=qY6Wl4NRZy5NeGatJLaP47dn0Rq%2FHkb6%2FF1Fh45hYAeZB0laI7Ou9jt6352%2FWyGB3gQlDp%2FD0BMti7MqihH6oRdKBkxL%2B8kbK53O6IuvB31faePv4606C2SO3f0K9zIpQu3w"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 768d319d081374b1-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU"}}

11:56:04.754 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU"
  }
}
 
11:56:04.758 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
11:56:04.759 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU 
11:56:04.761 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
11:56:04.761 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 12 Nov 2022 06:26:02 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-MLzf9hC0WZfPIM2L/TawZuQ1yTk\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=qY6Wl4NRZy5NeGatJLaP47dn0Rq%2FHkb6%2FF1Fh45hYAeZB0laI7Ou9jt6352%2FWyGB3gQlDp%2FD0BMti7MqihH6oRdKBkxL%2B8kbK53O6IuvB31faePv4606C2SO3f0K9zIpQu3w\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "768d319d081374b1-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123fjv3enyog5@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU",
  "username": "dinesh11"
}
 
11:56:10.228 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU 
11:56:10.232 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0MzYyLCJleHAiOjE2NzM0MTgzNjJ9.AHLRSw882I27qxu6nyd6FU6L-M798jLo__739gGrbTU
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 137
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090","tagList":["xyt1","xyt2"]}}

11:56:11.287 [main] DEBUG com.intuit.karate - response time in milliseconds: 1055
2 < 422
2 < Date: Sat, 12 Nov 2022 06:26:09 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Content-Length: 39
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=JClO3BakAnirLDKKl34wg6h5bVmVcH6OTrsz%2FX0ApGnqPtSzYNPqUq4JMDDE2wvGPDyvYQGygJSQUH0PJ%2FNj6F0df%2Bt4ZOkP8R%2BcrW9WokcdzOCZsxlVV2rcrBDCRSKs2J8M"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 768d31c95becdd87-LHR
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"errors":{"title":["must be unique"]}}

11:56:11.288 [main] ERROR com.intuit.karate - classpath:Datadriven/addarticleusingautocreatedjson.feature:15
Then status 200
status code was: 422, expected: 200, response time in milliseconds: 1055, url: https://api.realworld.io/api/articles, response: 
{"errors":{"title":["must be unique"]}}
classpath:Datadriven/addarticleusingautocreatedjson.feature:15
12:02:34.773 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
12:02:34.870 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:02:35.553 [main] INFO  com.intuit.karate - karate.env system property was: QA 
12:02:35.558 [main] INFO  com.intuit.karate - karate.env run with new user : N 
12:02:35.584 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
12:02:35.870 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

12:02:37.394 [main] DEBUG com.intuit.karate - response time in milliseconds: 1521
1 < 200
1 < Date: Sat, 12 Nov 2022 06:32:35 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-tC5pr2LUru/XtbMsyA5leSEI88A"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=tLYYIpvOKTE6kha0g6iXOTnguSAwy4qshaH5VW5uTXk1p%2BR%2Fsu1UYmA0xg7uJNEAnH6FAr5bywmi9rZqbTSteh16LlbOMf0nfCD1vTZyXx4PY%2FP17kpBRmPU8tWZeYancKrz"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 768d3b324e2175a9-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60"}}

12:02:37.396 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60"
  }
}
 
12:02:37.400 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
12:02:37.401 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60 
12:02:37.403 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
12:02:37.404 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 12 Nov 2022 06:32:35 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-tC5pr2LUru/XtbMsyA5leSEI88A\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=tLYYIpvOKTE6kha0g6iXOTnguSAwy4qshaH5VW5uTXk1p%2BR%2Fsu1UYmA0xg7uJNEAnH6FAr5bywmi9rZqbTSteh16LlbOMf0nfCD1vTZyXx4PY%2FP17kpBRmPU8tWZeYancKrz\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "768d3b324e2175a9-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123woavsc6zjmi@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60",
  "username": "dinesh11"
}
 
12:02:42.851 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60 
12:02:42.857 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjY4MjM0NzU1LCJleHAiOjE2NzM0MTg3NTV9.Fh0suR7Sy8Q9KVjOJNqBmIxf753OsVxZX6cKg2fdv60
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 137
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090","tagList":["xyt1","xyt2"]}}

12:02:44.726 [main] DEBUG com.intuit.karate - response time in milliseconds: 1868
2 < 200
2 < Date: Sat, 12 Nov 2022 06:32:43 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"19f-rrZfsVN33u7ABPjX3SVbyY95se8"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=3tfP%2BiKsT9mFbltOHY%2FuCOYTnpyLPZLPfAZI2yGYIX1nJFcqMxNXTwUhVlKq5WBhbrNnR6QUM4qGYyEi4JZFkOxg0CtKwR%2BZldpABzfhwfvPqoVd3VMqo5pUNEGd6g3707Xa"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 768d3b639d8e888b-LHR
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Cucumber_Maven_history_11-99869","title":"Cucumber_Maven_history_11","description":"cucumber Automation Project","body":"test9090","tagList":["xyt1","xyt2"],"createdAt":"2022-11-12T06:32:42.968Z","updatedAt":"2022-11-12T06:32:42.968Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

12:02:44.748 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Cucumber_Maven_history_11-99869",
    "title": "Cucumber_Maven_history_11",
    "description": "cucumber Automation Project",
    "body": "test9090",
    "tagList": [
      "xyt1",
      "xyt2"
    ],
    "createdAt": "2022-11-12T06:32:42.968Z",
    "updatedAt": "2022-11-12T06:32:42.968Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
12:02:44.749 [main] INFO  com.intuit.karate - [print] Title :: Cucumber_Maven_history_11-99869 
17:42:13.009 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
17:42:13.170 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
17:42:14.270 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:42:14.276 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:42:14.300 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
17:42:14.829 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

17:42:16.322 [main] DEBUG com.intuit.karate - response time in milliseconds: 1490
1 < 200
1 < Date: Sat, 03 Dec 2022 12:12:15 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-JEPRRsnDZ0WzbxxWHPlUPuAMUMM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=rNmtd%2FWAlkJavuseQ5MAPXcK25bE3kjWTHCVN12P3UhOt9Lfs6%2FTRdo8BQcFanX1AtrGQI2NE%2FK4zVUTLhURZCcvDNPAG6MhPrgTZ%2BTOolbWTfV12khw4w9sr0cs%2F4ibY7Yr"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c35a119f668f2-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"}}

17:42:16.326 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"
  }
}
 
17:42:16.330 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
17:42:16.331 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg 
17:42:16.335 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
17:42:16.336 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:12:15 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-JEPRRsnDZ0WzbxxWHPlUPuAMUMM\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=rNmtd%2FWAlkJavuseQ5MAPXcK25bE3kjWTHCVN12P3UhOt9Lfs6%2FTRdo8BQcFanX1AtrGQI2NE%2FK4zVUTLhURZCcvDNPAG6MhPrgTZ%2BTOolbWTfV12khw4w9sr0cs%2F4ibY7Yr\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c35a119f668f2-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1238oinb0zo3jn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg",
  "username": "dinesh11"
}
 
17:42:16.349 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg 
17:42:16.358 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 135
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["QA"],"title":"ManualTesting","description":"Manual testing with black box testing","body":"Black box testing"}}

17:42:17.060 [main] DEBUG com.intuit.karate - response time in milliseconds: 702
2 < 401
2 < Date: Sat, 03 Dec 2022 12:12:15 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Content-Length: 64
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"40-MzpzbITdb69gTCj5BHAcyuxi2c0"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=WtY7mhb4%2B%2BTZncNqtumXPzE0zsLGUUJU5dLARXLOuHicQJtBpJrfIWNwURtDUwEaCsnOVEIM4%2Fczi42135kjziJp44r4tuS7uU9AE8RxXMsZYVzDZVeQg1H5CgP3j1qA1O56"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 773c35a69e986925-FRA
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"status":"error","message":"missing authorization credentials"}

17:42:17.062 [main] ERROR com.intuit.karate - classpath:Datadriven/data_driven_conduit.feature:15
Then status 200
status code was: 401, expected: 200, response time in milliseconds: 702, url: https://api.realworld.io/api/articles, response: 
{"status":"error","message":"missing authorization credentials"}
classpath:Datadriven/data_driven_conduit.feature:15
17:42:17.100 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:42:17.103 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:42:17.106 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:12:15 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-JEPRRsnDZ0WzbxxWHPlUPuAMUMM\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=rNmtd%2FWAlkJavuseQ5MAPXcK25bE3kjWTHCVN12P3UhOt9Lfs6%2FTRdo8BQcFanX1AtrGQI2NE%2FK4zVUTLhURZCcvDNPAG6MhPrgTZ%2BTOolbWTfV12khw4w9sr0cs%2F4ibY7Yr\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c35a119f668f2-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1238oinb0zo3jn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg",
  "username": "dinesh11"
}
 
17:42:17.111 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg 
17:42:17.115 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 134
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["QA"],"title":"Automation Testing","description":"Automation testing with selenium","body":"Selenium Testing"}}

17:42:17.812 [main] DEBUG com.intuit.karate - response time in milliseconds: 697
1 < 401
1 < Date: Sat, 03 Dec 2022 12:12:16 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 64
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"40-MzpzbITdb69gTCj5BHAcyuxi2c0"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=gZTxjPrKx0aF5myf79Cb%2B5mLI6ydMM809QsWDJqupcPRCClPNeqTtOxrLqNad49jV7BWwGEhXRU2wgj3krUFo4Cgsgz8qydUACKcCdxx2otkKE%2B%2FlfhDSA%2FRa3S8TgOxN9bn"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c35aaebe86951-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"status":"error","message":"missing authorization credentials"}

17:42:17.813 [main] ERROR com.intuit.karate - classpath:Datadriven/data_driven_conduit.feature:15
Then status 200
status code was: 401, expected: 200, response time in milliseconds: 697, url: https://api.realworld.io/api/articles, response: 
{"status":"error","message":"missing authorization credentials"}
classpath:Datadriven/data_driven_conduit.feature:15
17:42:17.820 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:42:17.820 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:42:17.821 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:12:15 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-JEPRRsnDZ0WzbxxWHPlUPuAMUMM\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=rNmtd%2FWAlkJavuseQ5MAPXcK25bE3kjWTHCVN12P3UhOt9Lfs6%2FTRdo8BQcFanX1AtrGQI2NE%2FK4zVUTLhURZCcvDNPAG6MhPrgTZ%2BTOolbWTfV12khw4w9sr0cs%2F4ibY7Yr\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c35a119f668f2-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1238oinb0zo3jn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg",
  "username": "dinesh11"
}
 
17:42:17.825 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles/Automation-Testing-99869/favorite
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 2
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{}

17:42:18.449 [main] DEBUG com.intuit.karate - response time in milliseconds: 623
1 < 500
1 < Date: Sat, 03 Dec 2022 12:12:17 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 198
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"c6-lOugqh+Nyq3jZh+QqGuQxpacwRQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=BzEIxlZpzZuWLSLM3QXYlqxlmO2xdNy8Ny1CT9ar0%2BaqIacQUSRzBbCdnX9SwI8SNFUF9rOnnuEZl%2Fd9nep591sqOMNM036Q6M%2BzBFRDQ9%2FyZ8QNh5fLfzFJJwJWUl8I52a4"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c35af4d3a161d-DUS
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
"\nInvalid `prisma.article.update()` invocation:\n\n\nQuery interpretation error. Error for binding '0': AssertionError(\"Required exactly one parent ID to be present for connect query, found 0.\")"

17:42:18.451 [main] ERROR com.intuit.karate - classpath:Datadriven/data_driven_conduit.feature:32
Then status 200
status code was: 500, expected: 200, response time in milliseconds: 623, url: https://api.realworld.io/api/articles/Automation-Testing-99869/favorite, response: 
"\nInvalid `prisma.article.update()` invocation:\n\n\nQuery interpretation error. Error for binding '0': AssertionError(\"Required exactly one parent ID to be present for connect query, found 0.\")"
classpath:Datadriven/data_driven_conduit.feature:32
17:42:18.459 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:42:18.460 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:42:18.461 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:12:15 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-JEPRRsnDZ0WzbxxWHPlUPuAMUMM\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=rNmtd%2FWAlkJavuseQ5MAPXcK25bE3kjWTHCVN12P3UhOt9Lfs6%2FTRdo8BQcFanX1AtrGQI2NE%2FK4zVUTLhURZCcvDNPAG6MhPrgTZ%2BTOolbWTfV12khw4w9sr0cs%2F4ibY7Yr\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c35a119f668f2-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1238oinb0zo3jn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg",
  "username": "dinesh11"
}
 
17:42:18.465 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles/ManualTesting-99869/favorite
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 2
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{}

17:42:19.189 [main] DEBUG com.intuit.karate - response time in milliseconds: 723
1 < 500
1 < Date: Sat, 03 Dec 2022 12:12:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 198
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"c6-lOugqh+Nyq3jZh+QqGuQxpacwRQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=VFtlsPRpFA5vFk5xZ70iUGbCnFlFybw51qx49D6Xjehxi3PiL%2BNToeRKHY6MvDM92g3Dx1SkJ2GqKJwY9GCicxCLsdvG5hz3ERBakHpML0nkcFtDo8XSezXMzu%2Bo1N0TNncY"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c35b3dc7b693a-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
"\nInvalid `prisma.article.update()` invocation:\n\n\nQuery interpretation error. Error for binding '0': AssertionError(\"Required exactly one parent ID to be present for connect query, found 0.\")"

17:42:19.190 [main] ERROR com.intuit.karate - classpath:Datadriven/data_driven_conduit.feature:32
Then status 200
status code was: 500, expected: 200, response time in milliseconds: 723, url: https://api.realworld.io/api/articles/ManualTesting-99869/favorite, response: 
"\nInvalid `prisma.article.update()` invocation:\n\n\nQuery interpretation error. Error for binding '0': AssertionError(\"Required exactly one parent ID to be present for connect query, found 0.\")"
classpath:Datadriven/data_driven_conduit.feature:32
17:42:19.198 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:42:19.199 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:42:19.201 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:12:15 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-JEPRRsnDZ0WzbxxWHPlUPuAMUMM\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=rNmtd%2FWAlkJavuseQ5MAPXcK25bE3kjWTHCVN12P3UhOt9Lfs6%2FTRdo8BQcFanX1AtrGQI2NE%2FK4zVUTLhURZCcvDNPAG6MhPrgTZ%2BTOolbWTfV12khw4w9sr0cs%2F4ibY7Yr\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c35a119f668f2-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1238oinb0zo3jn@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NTM1LCJleHAiOjE2NzUyNTM1MzV9.Bc5QlZEX7LhLtVx-TPTDwT_COdpDrSX62XYK3v-4qlg",
  "username": "dinesh11"
}
 
17:42:19.222 [main] DEBUG com.intuit.karate - request:
1 > GET https://api.realworld.io/api/profiles/dinesh11
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate


17:42:19.934 [main] DEBUG com.intuit.karate - response time in milliseconds: 711
1 < 200
1 < Date: Sat, 03 Dec 2022 12:12:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"7c-7PGWtf5YMZhy/jLE4u21wO0p+sc"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=zePvT37TdxgQsLGFj1LYzDXAGKJvvl68J6tSIJSJ9HCGqj59uq8CIqNKHRBl7WBFjFPr3hhib01ZKppzEaV8T6fS4TO%2FkO5ARtD%2FhyPGyyFcdmbV4bu7dxK%2BPkhbnIuPoISM"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c35b88c4a694c-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"profile":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}

17:42:19.935 [main] INFO  com.intuit.karate - [print] {
  "profile": {
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "following": false
  }
}
 
17:44:06.105 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
17:44:06.215 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
17:44:07.080 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:44:07.087 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:44:07.108 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
17:44:07.461 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

17:44:08.430 [main] DEBUG com.intuit.karate - response time in milliseconds: 966
1 < 200
1 < Date: Sat, 03 Dec 2022 12:14:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-Aw1GvEhrf3l6C0hQYuMtJxdMLkQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=4BmYMZY1hR2gMab9wKblCidSv1eYp9haqurYcQwi2Ig1BGzZQO1IBtKgLHcgYsLrgeML7HmE2Z7XZ%2FCdMuSl8kfy7jpiK23UdrbMU6J3PpPE%2FwuudKZs0BMxo80zCA%2FQC4vV"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c385dce675cb0-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"}}

17:44:08.433 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"
  }
}
 
17:44:08.438 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
17:44:08.440 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c 
17:44:08.442 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
17:44:08.443 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:14:07 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-Aw1GvEhrf3l6C0hQYuMtJxdMLkQ\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4BmYMZY1hR2gMab9wKblCidSv1eYp9haqurYcQwi2Ig1BGzZQO1IBtKgLHcgYsLrgeML7HmE2Z7XZ%2FCdMuSl8kfy7jpiK23UdrbMU6J3PpPE%2FwuudKZs0BMxo80zCA%2FQC4vV\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c385dce675cb0-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1233orezi4y1vt@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c",
  "username": "dinesh11"
}
 
17:44:08.451 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c 
17:44:08.457 [main] DEBUG com.intuit.karate - request:
2 > POST https://api.realworld.io/api/articles
2 > Accept: application/json
2 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c
2 > Content-Type: application/json; charset=UTF-8
2 > Content-Length: 135
2 > Host: api.realworld.io
2 > Connection: Keep-Alive
2 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
2 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["QA"],"title":"ManualTesting","description":"Manual testing with black box testing","body":"Black box testing"}}

17:44:09.703 [main] DEBUG com.intuit.karate - response time in milliseconds: 1245
2 < 200
2 < Date: Sat, 03 Dec 2022 12:14:08 GMT
2 < Content-Type: application/json; charset=utf-8
2 < Transfer-Encoding: chunked
2 < Connection: keep-alive
2 < X-Powered-By: Express
2 < Access-Control-Allow-Origin: *
2 < Etag: W/"191-F7wFNSt06TufIerSS2pN5MBDZiQ"
2 < Via: 1.1 vegur
2 < CF-Cache-Status: DYNAMIC
2 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=I4dXwoEgU0PYK2AQyMOStedrOte0ZQ7IMZn2HVj0%2F3BPlw8GztSXNUKamgX5MI4poyeiKX%2BNEktj0ZJ6y%2FgQf39TnHKUOPBrXU5tJ8xaPgCsKRSmBj6jz74CL84ZMgOUIuWn"}],"group":"cf-nel","max_age":604800}
2 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
2 < Server: cloudflare
2 < CF-RAY: 773c38665dd86903-FRA
2 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"ManualTesting-99869","title":"ManualTesting","description":"Manual testing with black box testing","body":"Black box testing","tagList":["QA"],"createdAt":"2022-12-03T12:14:08.547Z","updatedAt":"2022-12-03T12:14:08.547Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

17:44:09.706 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "ManualTesting-99869",
    "title": "ManualTesting",
    "description": "Manual testing with black box testing",
    "body": "Black box testing",
    "tagList": [
      "QA"
    ],
    "createdAt": "2022-12-03T12:14:08.547Z",
    "updatedAt": "2022-12-03T12:14:08.547Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
17:44:09.707 [main] INFO  com.intuit.karate - [print] Title :: ManualTesting-99869 
17:44:09.721 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:44:09.722 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:44:09.723 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:14:07 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-Aw1GvEhrf3l6C0hQYuMtJxdMLkQ\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4BmYMZY1hR2gMab9wKblCidSv1eYp9haqurYcQwi2Ig1BGzZQO1IBtKgLHcgYsLrgeML7HmE2Z7XZ%2FCdMuSl8kfy7jpiK23UdrbMU6J3PpPE%2FwuudKZs0BMxo80zCA%2FQC4vV\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c385dce675cb0-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1233orezi4y1vt@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c",
  "username": "dinesh11"
}
 
17:44:09.726 [main] INFO  com.intuit.karate - [print] Access token is : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c 
17:44:09.728 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 134
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"article":{"tagList":["QA"],"title":"Automation Testing","description":"Automation testing with selenium","body":"Selenium Testing"}}

17:44:10.379 [main] DEBUG com.intuit.karate - response time in milliseconds: 650
1 < 200
1 < Date: Sat, 03 Dec 2022 12:14:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"195-U0ou3O9/iYGQKQMIE7EITcE71y4"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=bo9A12Wyh11QcsLwLS6aW1HayEFVFXxMFXxdzwWG6wiZ41kh47BGDl1ZDGdvo76dUC%2FyzA3yjsGUcTDhwKrorAGFbg%2FvrbPxOOHuJ8IooZf7%2FSXURZQ5jZ2i20mzKMhZlBkV"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c386abdae691f-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"slug":"Automation-Testing-99869","title":"Automation Testing","description":"Automation testing with selenium","body":"Selenium Testing","tagList":["QA"],"createdAt":"2022-12-03T12:14:09.229Z","updatedAt":"2022-12-03T12:14:09.229Z","favorited":false,"favoritesCount":0,"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}}

17:44:10.382 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "slug": "Automation-Testing-99869",
    "title": "Automation Testing",
    "description": "Automation testing with selenium",
    "body": "Selenium Testing",
    "tagList": [
      "QA"
    ],
    "createdAt": "2022-12-03T12:14:09.229Z",
    "updatedAt": "2022-12-03T12:14:09.229Z",
    "favorited": false,
    "favoritesCount": 0,
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    }
  }
}
 
17:44:10.385 [main] INFO  com.intuit.karate - [print] Title :: Automation-Testing-99869 
17:44:10.396 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:44:10.397 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:44:10.398 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:14:07 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-Aw1GvEhrf3l6C0hQYuMtJxdMLkQ\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4BmYMZY1hR2gMab9wKblCidSv1eYp9haqurYcQwi2Ig1BGzZQO1IBtKgLHcgYsLrgeML7HmE2Z7XZ%2FCdMuSl8kfy7jpiK23UdrbMU6J3PpPE%2FwuudKZs0BMxo80zCA%2FQC4vV\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c385dce675cb0-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1233orezi4y1vt@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c",
  "username": "dinesh11"
}
 
17:44:10.411 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles/Automation-Testing-99869/favorite
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 2
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{}

17:44:11.088 [main] DEBUG com.intuit.karate - response time in milliseconds: 676
1 < 200
1 < Date: Sat, 03 Dec 2022 12:14:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2a3-dqCy8XikdQzLaWhMh52ddjISAow"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=bg2t2pkKhDQppNLDBLfFUqfwj1AikJYiaQPJwBbpwJ%2FYmPH2RzIF8K9xbtr0jni%2FIuBiCwI5fcN7CFMQavhGY38LOzENOkzx6qaFEiBKioC1Y0ZMH2O2uAUL%2BdYjqUxDnfXM"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c386efc835be5-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"id":168489,"slug":"Automation-Testing-99869","title":"Automation Testing","description":"Automation testing with selenium","body":"Selenium Testing","createdAt":"2022-12-03T12:14:09.229Z","updatedAt":"2022-12-03T12:14:09.229Z","authorId":99869,"tagList":["QA"],"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false},"favoritedBy":[{"id":99869,"email":"patildinesh19@yahh.com","username":"dinesh11","password":"$2a$10$bR3KS.qOaa9WVh2XgC1JgOm25tjwQ/XjAgVZN3g2KST9gxjxTEyWi","image":"https://api.realworld.io/images/smiley-cyrus.jpeg","bio":null,"demo":false}],"favorited":true,"favoritesCount":1}}

17:44:11.090 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "id": 168489,
    "slug": "Automation-Testing-99869",
    "title": "Automation Testing",
    "description": "Automation testing with selenium",
    "body": "Selenium Testing",
    "createdAt": "2022-12-03T12:14:09.229Z",
    "updatedAt": "2022-12-03T12:14:09.229Z",
    "authorId": 99869,
    "tagList": [
      "QA"
    ],
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    },
    "favoritedBy": [
      {
        "id": 99869,
        "email": "patildinesh19@yahh.com",
        "username": "dinesh11",
        "password": "$2a$10$bR3KS.qOaa9WVh2XgC1JgOm25tjwQ/XjAgVZN3g2KST9gxjxTEyWi",
        "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
        "bio": null,
        "demo": false
      }
    ],
    "favorited": true,
    "favoritesCount": 1
  }
}
 
17:44:11.110 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:44:11.111 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:44:11.111 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:14:07 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-Aw1GvEhrf3l6C0hQYuMtJxdMLkQ\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4BmYMZY1hR2gMab9wKblCidSv1eYp9haqurYcQwi2Ig1BGzZQO1IBtKgLHcgYsLrgeML7HmE2Z7XZ%2FCdMuSl8kfy7jpiK23UdrbMU6J3PpPE%2FwuudKZs0BMxo80zCA%2FQC4vV\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c385dce675cb0-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1233orezi4y1vt@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c",
  "username": "dinesh11"
}
 
17:44:11.115 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/articles/ManualTesting-99869/favorite
1 > Accept: application/json
1 > Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 2
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{}

17:44:11.772 [main] DEBUG com.intuit.karate - response time in milliseconds: 657
1 < 200
1 < Date: Sat, 03 Dec 2022 12:14:10 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"29f-yp4s6qKUCRJuBKg+Vhi1e4l9ALQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=YSKMLJRTb0fWu0f7Vn0jMQ9bwlrSnrxAuEQKDWewo9O0qyQrd3oawGXfe6pYm0EskRWXDX6PwubIjdPzQ2lMCDLxjuc02zeKFvYvgl5%2FWYwOjV8OwOwpLiheZQ5YXD%2B9g8g4"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c38735bf19b33-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"article":{"id":168488,"slug":"ManualTesting-99869","title":"ManualTesting","description":"Manual testing with black box testing","body":"Black box testing","createdAt":"2022-12-03T12:14:08.547Z","updatedAt":"2022-12-03T12:14:08.547Z","authorId":99869,"tagList":["QA"],"author":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false},"favoritedBy":[{"id":99869,"email":"patildinesh19@yahh.com","username":"dinesh11","password":"$2a$10$bR3KS.qOaa9WVh2XgC1JgOm25tjwQ/XjAgVZN3g2KST9gxjxTEyWi","image":"https://api.realworld.io/images/smiley-cyrus.jpeg","bio":null,"demo":false}],"favorited":true,"favoritesCount":1}}

17:44:11.774 [main] INFO  com.intuit.karate - [print] {
  "article": {
    "id": 168488,
    "slug": "ManualTesting-99869",
    "title": "ManualTesting",
    "description": "Manual testing with black box testing",
    "body": "Black box testing",
    "createdAt": "2022-12-03T12:14:08.547Z",
    "updatedAt": "2022-12-03T12:14:08.547Z",
    "authorId": 99869,
    "tagList": [
      "QA"
    ],
    "author": {
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "following": false
    },
    "favoritedBy": [
      {
        "id": 99869,
        "email": "patildinesh19@yahh.com",
        "username": "dinesh11",
        "password": "$2a$10$bR3KS.qOaa9WVh2XgC1JgOm25tjwQ/XjAgVZN3g2KST9gxjxTEyWi",
        "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
        "bio": null,
        "demo": false
      }
    ],
    "favorited": true,
    "favoritesCount": 1
  }
}
 
17:44:11.784 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:44:11.785 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:44:11.787 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Sat, 03 Dec 2022 12:14:07 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-Aw1GvEhrf3l6C0hQYuMtJxdMLkQ\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=4BmYMZY1hR2gMab9wKblCidSv1eYp9haqurYcQwi2Ig1BGzZQO1IBtKgLHcgYsLrgeML7HmE2Z7XZ%2FCdMuSl8kfy7jpiK23UdrbMU6J3PpPE%2FwuudKZs0BMxo80zCA%2FQC4vV\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "773c385dce675cb0-FRA"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1233orezi4y1vt@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjcwMDY5NjQ3LCJleHAiOjE2NzUyNTM2NDd9.FvW0l1z10EnWiJpdWfI9CG6RhoeDufahDkucJ8_sl3c",
  "username": "dinesh11"
}
 
17:44:11.807 [main] DEBUG com.intuit.karate - request:
1 > GET https://api.realworld.io/api/profiles/dinesh11
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate


17:44:12.516 [main] DEBUG com.intuit.karate - response time in milliseconds: 709
1 < 200
1 < Date: Sat, 03 Dec 2022 12:14:11 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"7c-7PGWtf5YMZhy/jLE4u21wO0p+sc"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=Ti4rQZ6Yo5dbRD50O3%2Fk%2BDGvyKR8Lc%2BLzz7%2BFmzx0CZjSPWe0ohRqeeP5DYNRr%2B5BayhL3%2Bl0zBfbaj5tjV6CgB6tXagaNryZunLpkAdVJxKKzHrkf9n%2F%2B%2For8FsXe06i2Ok"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 773c38782c856934-FRA
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"profile":{"username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","following":false}}

17:44:12.519 [main] INFO  com.intuit.karate - [print] {
  "profile": {
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "following": false
  }
}
 
17:09:18.827 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
17:09:18.942 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
17:09:19.823 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:09:19.830 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:09:19.858 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
17:09:20.295 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

17:09:21.968 [main] DEBUG com.intuit.karate - response time in milliseconds: 1672
1 < 200
1 < Date: Tue, 24 Jan 2023 11:39:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-9tP65impdryGVKADceHG8DfTCw4"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=rdQ%2FFkamBa2dDfvt%2BA4AyNbk6nR6pKic51xyPzfT9ae9gMKctKYGKZMpa2pmSc4N15Vt0bixTitO4wo%2BHO2QnRkt4eYo4X0oJwRHcY%2Ffl1reMLWnry3iSZoomttyVXP5BGaF"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 78e87cf8dfd6240f-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwMzYyLCJleHAiOjE2Nzk3NDQzNjJ9.pPrnz9aVOSVMkS0_DsWJY4eiCyepEp4146Q9Zla7YIM"}}

17:09:21.972 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwMzYyLCJleHAiOjE2Nzk3NDQzNjJ9.pPrnz9aVOSVMkS0_DsWJY4eiCyepEp4146Q9Zla7YIM"
  }
}
 
17:09:21.975 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
17:09:21.977 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwMzYyLCJleHAiOjE2Nzk3NDQzNjJ9.pPrnz9aVOSVMkS0_DsWJY4eiCyepEp4146Q9Zla7YIM 
17:09:21.978 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
17:09:21.980 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Tue, 24 Jan 2023 11:39:22 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-9tP65impdryGVKADceHG8DfTCw4\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=rdQ%2FFkamBa2dDfvt%2BA4AyNbk6nR6pKic51xyPzfT9ae9gMKctKYGKZMpa2pmSc4N15Vt0bixTitO4wo%2BHO2QnRkt4eYo4X0oJwRHcY%2Ffl1reMLWnry3iSZoomttyVXP5BGaF\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "78e87cf8dfd6240f-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_1238g9uwkgbphk@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwMzYyLCJleHAiOjE2Nzk3NDQzNjJ9.pPrnz9aVOSVMkS0_DsWJY4eiCyepEp4146Q9Zla7YIM"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwMzYyLCJleHAiOjE2Nzk3NDQzNjJ9.pPrnz9aVOSVMkS0_DsWJY4eiCyepEp4146Q9Zla7YIM",
  "username": "dinesh11"
}
 
17:09:22.004 [main] ERROR com.intuit.karate - classpath:Datadriven//data_driven_conduit2.feature:7
* def tesdata = read("payload.xlsx")
js failed:
>>>>
01: read("payload.xlsx")
<<<<
org.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: D:\Karate Framework\karateframework\target\test-classes\Datadriven\payload.xlsx (The system cannot find the file specified)
- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)
- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:102)
- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:79)
- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:129)
- <js>.:program(Unnamed:1)

classpath:Datadriven//data_driven_conduit2.feature:7
17:10:43.887 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
17:10:44.000 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
17:10:44.732 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:10:44.741 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:10:44.773 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
17:10:45.087 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

17:10:46.344 [main] DEBUG com.intuit.karate - response time in milliseconds: 1255
1 < 200
1 < Date: Tue, 24 Jan 2023 11:40:46 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-9Qs/GWIydmpVhLroxiq9MtB2OO8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=dhF4hDBDKsvqzk7WEVijmn8C1ivERrDJzy6xyHlmik6WJZpxotN6yARbnfT%2F0eGgtc%2Fdgar2DnnKbawXZ86o35b6oAw%2FWASpTn34piN837Qc%2F9cOYz9WSytOrsGc1%2FP1g5mz"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 78e87f07fede7309-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNDQ2LCJleHAiOjE2Nzk3NDQ0NDZ9.c9PIIu8KcC9IQcT7r9bO6eXCZsRRAl93jPJHYDP0RjY"}}

17:10:46.347 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNDQ2LCJleHAiOjE2Nzk3NDQ0NDZ9.c9PIIu8KcC9IQcT7r9bO6eXCZsRRAl93jPJHYDP0RjY"
  }
}
 
17:10:46.351 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
17:10:46.352 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNDQ2LCJleHAiOjE2Nzk3NDQ0NDZ9.c9PIIu8KcC9IQcT7r9bO6eXCZsRRAl93jPJHYDP0RjY 
17:10:46.354 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
17:10:46.354 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Tue, 24 Jan 2023 11:40:46 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-9Qs/GWIydmpVhLroxiq9MtB2OO8\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dhF4hDBDKsvqzk7WEVijmn8C1ivERrDJzy6xyHlmik6WJZpxotN6yARbnfT%2F0eGgtc%2Fdgar2DnnKbawXZ86o35b6oAw%2FWASpTn34piN837Qc%2F9cOYz9WSytOrsGc1%2FP1g5mz\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "78e87f07fede7309-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123rpfwf57u4lo@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNDQ2LCJleHAiOjE2Nzk3NDQ0NDZ9.c9PIIu8KcC9IQcT7r9bO6eXCZsRRAl93jPJHYDP0RjY"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNDQ2LCJleHAiOjE2Nzk3NDQ0NDZ9.c9PIIu8KcC9IQcT7r9bO6eXCZsRRAl93jPJHYDP0RjY",
  "username": "dinesh11"
}
 
17:12:03.969 [main] INFO  com.intuit.karate.Runner - using system property 'karate.env': QA
17:12:04.056 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
17:12:04.740 [main] INFO  com.intuit.karate - karate.env system property was: QA 
17:12:04.747 [main] INFO  com.intuit.karate - karate.env run with new user : N 
17:12:04.771 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:Datadriven/login.feature
17:12:05.073 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/17.0.5)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"patildinesh19@yahh.com","password":"Test@123"}}

17:12:06.320 [main] DEBUG com.intuit.karate - response time in milliseconds: 1245
1 < 200
1 < Date: Tue, 24 Jan 2023 11:42:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-ePydFugZ0feI8ZcvzH5IHHHxR+c"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=E66sJ0KwISHWIPlL1iBpHCsWxfMxy4YXdJO3PLd8DKP1gwcoTrhvaQpIg3pTmi4EAh26hc38%2FVz%2FNiVgDkb0lWnhbx3pBxgv4MtjWbtt0esSoNQ53f1aXo242Q59Eq1M%2BWVy"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 78e880fc0edd24ab-LHR
1 < alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400
{"user":{"email":"patildinesh19@yahh.com","username":"dinesh11","bio":null,"image":"https://api.realworld.io/images/smiley-cyrus.jpeg","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNTI2LCJleHAiOjE2Nzk3NDQ1MjZ9.lMNP4twDtHWKfJj2cr7fJ4T2VnbJupFYErEvnX1okic"}}

17:12:06.323 [main] INFO  com.intuit.karate - [print] {
  "user": {
    "email": "patildinesh19@yahh.com",
    "username": "dinesh11",
    "bio": null,
    "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNTI2LCJleHAiOjE2Nzk3NDQ1MjZ9.lMNP4twDtHWKfJj2cr7fJ4T2VnbJupFYErEvnX1okic"
  }
}
 
17:12:06.327 [main] INFO  com.intuit.karate - [print] USERNAME is ==> dinesh11 
17:12:06.328 [main] INFO  com.intuit.karate - [print] TOKEN ==>:  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNTI2LCJleHAiOjE2Nzk3NDQ1MjZ9.lMNP4twDtHWKfJj2cr7fJ4T2VnbJupFYErEvnX1okic 
17:12:06.329 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:Datadriven/login.feature
17:12:06.330 [main] INFO  com.intuit.karate - token details {
  "password": "Test@123",
  "responseHeaders": {
    "Date": [
      "Tue, 24 Jan 2023 11:42:07 GMT"
    ],
    "Content-Type": [
      "application/json; charset=utf-8"
    ],
    "Transfer-Encoding": [
      "chunked"
    ],
    "Connection": [
      "keep-alive"
    ],
    "X-Powered-By": [
      "Express"
    ],
    "Access-Control-Allow-Origin": [
      "*"
    ],
    "Etag": [
      "W/\"15c-ePydFugZ0feI8ZcvzH5IHHHxR+c\""
    ],
    "Via": [
      "1.1 vegur"
    ],
    "CF-Cache-Status": [
      "DYNAMIC"
    ],
    "Report-To": [
      "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=E66sJ0KwISHWIPlL1iBpHCsWxfMxy4YXdJO3PLd8DKP1gwcoTrhvaQpIg3pTmi4EAh26hc38%2FVz%2FNiVgDkb0lWnhbx3pBxgv4MtjWbtt0esSoNQ53f1aXo242Q59Eq1M%2BWVy\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
    ],
    "NEL": [
      "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
    ],
    "Server": [
      "cloudflare"
    ],
    "CF-RAY": [
      "78e880fc0edd24ab-LHR"
    ],
    "alt-svc": [
      "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
    ]
  },
  "randomemailaddress": "randomemail_123ut72zug245@gmail.com",
  "response": {
    "user": {
      "email": "patildinesh19@yahh.com",
      "username": "dinesh11",
      "bio": null,
      "image": "https://api.realworld.io/images/smiley-cyrus.jpeg",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNTI2LCJleHAiOjE2Nzk3NDQ1MjZ9.lMNP4twDtHWKfJj2cr7fJ4T2VnbJupFYErEvnX1okic"
    }
  },
  "env": "QA",
  "myVarName": "someValue",
  "responseStatus": 200,
  "baseurlconduit": "https://api.realworld.io/api/",
  "email": "patildinesh19@yahh.com",
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InBhdGlsZGluZXNoMTlAeWFoaC5jb20iLCJ1c2VybmFtZSI6ImRpbmVzaDExIiwiaWF0IjoxNjc0NTYwNTI2LCJleHAiOjE2Nzk3NDQ1MjZ9.lMNP4twDtHWKfJj2cr7fJ4T2VnbJupFYErEvnX1okic",
  "username": "dinesh11"
}
 
